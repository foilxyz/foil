{
  "name": "@sapience/api",
  "version": "1.0.0",
  "private": true,
  "license": "MIT",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "compile": "pnpm lint:fix && tsc",
    "build": "pnpm lint:fix && tsc && npm run sentry:sourcemaps",
    "dev": "pnpm prisma:setup && concurrently \"pnpm run dev:service\" \"pnpm run dev:worker\" \"pnpm run dev:codegen\"",
    "dev:service": "tsx watch src/server.ts",
    "dev:worker": "tsx watch src/workers/worker.ts",
    "dev:worker:markets": "tsx watch src/workers/worker.ts markets-only",
    "dev:worker:resources": "tsx watch src/workers/worker.ts resources-only",
    "dev:candle-cache": "tsx watch src/workers/candleCacheWorker.ts candle-cache",
    "dev:codegen": "graphql-codegen --config codegen.ts --watch",
    "start": "pnpm prisma:setup && concurrently \"pnpm run start:service\" \"pnpm run start:worker\"",
    "start:service": "pnpm prisma:setup && tsx src/server.ts",
    "start:worker": "pnpm prisma:setup && tsx src/workers/worker.ts",
    "start:worker:markets": "pnpm prisma:setup && tsx src/workers/worker.ts markets-only",
    "start:worker:resources": "pnpm prisma:setup && tsx src/workers/worker.ts resources-only",
    "start:candle-cache": "pnpm prisma:setup && tsx src/workers/candleCacheWorker.ts candle-cache",
    "start:reindex-market": "tsx src/workers/worker.ts reindexMarket $*",
    "start:reindex-missing": "tsx src/workers/worker.ts reindexMissing $*",
    "start:reindex-resource": "tsx src/workers/worker.ts reindexResource $*",
    "start:reindex-market-group-factory": "tsx src/workers/worker.ts reindexMarketGroupFactory $*",
    "test": "echo \"Error: no test specified\" && exit 1",
    "generate-types": "graphql-codegen --config codegen.ts",
    "sentry:sourcemaps": "sentry-cli sourcemaps inject --org foil --project data ./dist && sentry-cli sourcemaps upload --org foil --project data ./dist",
    "lint": "eslint src --max-warnings 0",
    "lint:fix": "eslint src --fix && pnpm format",
    "format": "prettier --write src",
    "prisma:generate": "SKIP_PRISMA_VERSION_CHECK=true prisma generate",
    "prisma:deploy": "prisma migrate deploy",
    "prisma:setup": "prisma migrate deploy && SKIP_PRISMA_VERSION_CHECK=true prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:reset": "prisma migrate reset",
    "prisma:studio": "prisma studio",
    "prisma:push": "prisma db push",
    "db:seed": "tsx prisma/seed.ts"
  },
  "keywords": [],
  "dependencies": {
    "@apollo/server": "^4.11.3",
    "@apollo/server-plugin-response-cache": "^4.1.4",
    "@modelcontextprotocol/sdk": "^1.11.4",
    "@msgpack/msgpack": "^3.1.1",
    "@prisma/client": "^6.10.1",
    "@sapience/protocol": "workspace:*",
    "@sentry/cli": "^2.39.0",
    "@sentry/node": "^8.40.0",
    "abitype": "^1.0.8",
    "axios": "^1.7.7",
    "class-validator": "^0.14.1",
    "concurrently": "^8.2.2",
    "cors": "^2.8.5",
    "dataloader": "^2.2.3",
    "discord.js": "^14.16.3",
    "dotenv": "^16.4.5",
    "express": "^4.21.1",
    "graphql": "^16.10.0",
    "graphql-depth-limit": "^1.1.0",
    "graphql-scalars": "^1.24.2",
    "pg": "^8.13.1",
    "prettier": "^3.3.3",
    "prisma": "^6.10.1",
    "reflect-metadata": "^0.2.2",
    "tsconfig-paths": "^4.2.0",
    "tsx": "^4.19.2",
    "type-graphql": "2.0.0-rc.2",
    "typegraphql-prisma": "^0.28.0",
    "typescript": "^5.7.2",
    "viem": "^2.21.49",
    "zod": "3.23.6"
  },
  "devDependencies": {
    "@eslint/js": "^9.18.0",
    "@graphql-codegen/cli": "^5.0.5",
    "@graphql-codegen/typescript": "^4.1.6",
    "@graphql-codegen/typescript-operations": "^4.6.0",
    "@graphql-codegen/typescript-resolvers": "^4.5.0",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/graphql-depth-limit": "^1.1.6",
    "@types/node": "^20.17.6",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "eslint": "^9.15.0",
    "globals": "^15.14.0",
    "typescript-eslint": "^8.21.0"
  },
  "engines": {
    "node": ">=20.14.x",
    "pnpm": "9.x"
  }
}