import { NUMERIC_PRECISION } from '../constants';
import {
  Entity,
  PrimaryGeneratedColumn,
  Column,
  CreateDateColumn,
  Index,
  Unique,
} from 'typeorm';

@Entity()
@Unique([
  'candleType',
  'interval',
  'timestamp',
  'resourceSlug',
  'marketIdx',
  'trailingAvgTime',
])
export class CacheCandle {
  @PrimaryGeneratedColumn()
  id: number;

  @CreateDateColumn()
  createdAt: Date;

  // Chart type identification
  @Column({ type: 'varchar' })
  @Index()
  candleType: string;

  @Column({ type: 'integer' })
  @Index()
  interval: number;

  @Column({ type: 'integer', nullable: true })
  @Index()
  trailingAvgTime: number;

  // Resource / Market identification
  @Column({ type: 'varchar', nullable: true })
  @Index()
  resourceSlug: string;

  @Column({ type: 'integer', nullable: true })
  @Index()
  marketIdx: number; // This is the market.id (autogenerated index, not id from the contract)

  @Column({ type: 'integer' })
  @Index()
  timestamp: number; // timestamp is the start of the candle, inclusive

  // Candle definition
  // open, high, low, close
  @Column({ type: 'varchar' })
  open: string;

  @Column({ type: 'varchar' })
  high: string;

  @Column({ type: 'varchar' })
  low: string;

  @Column({ type: 'varchar' })
  close: string;

  @Column({ type: 'integer' })
  endTimestamp: number; // endTimestamp is the end of the candle, exclusive

  // Last updated timestamp
  @Column({ type: 'integer' })
  lastUpdatedTimestamp: number;

  // Cummulative values
  @Column({
    type: 'numeric',
    precision: NUMERIC_PRECISION,
    scale: 0,
    nullable: true,
  })
  sumUsed: string;

  @Column({
    type: 'numeric',
    precision: NUMERIC_PRECISION,
    scale: 0,
    nullable: true,
  })
  sumFeePaid: string;

  @Column({ type: 'integer', nullable: true })
  trailingStartTimestamp: number;

  // Not normal form helpers For identifying market and market group onchain
  @Column({ type: 'varchar', nullable: true })
  @Index()
  address: string;

  @Column({ type: 'integer', nullable: true })
  @Index()
  chainId: number;

  @Column({ type: 'integer', nullable: true })
  @Index()
  marketId: number;
}
