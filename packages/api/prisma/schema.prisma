generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator typegraphql {
  provider = "typegraphql-prisma"
  contextPrismaKey = "customPrisma"
}

model cache_candle {
  id                     Int      @id(map: "PK_7cccb7fd4c9f01146f390945d47") @default(autoincrement())
  createdAt              DateTime @default(now()) @db.Timestamp(6)
  candleType             String   @db.VarChar
  interval               Int
  trailingAvgTime        Int?
  resourceSlug           String?  @db.VarChar
  marketIdx              Int?
  timestamp              Int
  open                   String   @db.VarChar
  high                   String   @db.VarChar
  low                    String   @db.VarChar
  close                  String   @db.VarChar
  endTimestamp           Int
  lastUpdatedTimestamp   Int
  sumUsed                Decimal? @db.Decimal(78, 0)
  sumFeePaid             Decimal? @db.Decimal(78, 0)
  trailingStartTimestamp Int?
  address                String?  @db.VarChar
  chainId                Int?
  marketId               Int?

  @@unique([candleType, interval, timestamp, resourceSlug, marketIdx, trailingAvgTime], map: "UQ_60da794228fdbf7a92bc9fe57ad")
  @@index([chainId], map: "IDX_116e57f9f620b605a2f6194c0b")
  @@index([resourceSlug], map: "IDX_18b0607b3120ec8c19f4bda502")
  @@index([address], map: "IDX_2ff6d3f51dade50ce5c1426303")
  @@index([marketId], map: "IDX_4d21c04139a79adbf94f86405a")
  @@index([timestamp], map: "IDX_669fbaca35ec75202012edcbed")
  @@index([trailingAvgTime], map: "IDX_8a3905657db0bc8cac1e561280")
  @@index([candleType], map: "IDX_b566d110c5729686ad4505a492")
  @@index([marketIdx], map: "IDX_beb912ef7d1246b726a6653ead")
  @@index([interval], map: "IDX_f5454dd794058f6ea2a9dd8e5f")
}

model cache_param {
  id               Int      @id(map: "PK_b54cfc9bf8c8a86647ef9d05bd4") @default(autoincrement())
  createdAt        DateTime @default(now()) @db.Timestamp(6)
  paramName        String   @unique(map: "UQ_aed649af408ded722f22e882314") @db.VarChar
  paramValueNumber Decimal  @db.Decimal(78, 0)
  paramValueString String?  @db.Text

  @@index([paramName], map: "IDX_aed649af408ded722f22e88231")
}

model category {
  id           Int            @id(map: "PK_9c4e4a89e3674fc9f382d733f03") @default(autoincrement())
  createdAt    DateTime       @default(now()) @db.Timestamp(6)
  name         String         @unique(map: "UQ_23c05c292c439d77b0de816b500") @db.VarChar
  slug         String         @unique(map: "UQ_cb73208f151aa71cdd78f662d70") @db.VarChar
  market_group market_group[]
  resource     resource[]

  @@index([slug], map: "IDX_cb73208f151aa71cdd78f662d7")
}

model collateral_transfer {
  id              Int          @id(map: "PK_802f4b29443f8febc65ab112e02") @default(autoincrement())
  createdAt       DateTime     @default(now()) @db.Timestamp(6)
  transactionHash String       @unique(map: "UQ_1ebf6f07652ca11d9f4618b64a3") @db.VarChar
  timestamp       Int
  owner           String       @db.VarChar
  collateral      Decimal      @db.Decimal(78, 0)
  transaction     transaction?

  @@index([transactionHash], map: "IDX_1ebf6f07652ca11d9f4618b64a")
}

model crypto_prices {
  id        Int      @id(map: "PK_89cb6d0cae37e526edadf4ce7c2") @default(autoincrement())
  ticker    String?
  price     Float
  timestamp DateTime @default(now()) @db.Timestamp(6)
}

model event {
  id              Int           @id(map: "PK_30c2f3bbaf6d34a55f8ae6e4614") @default(autoincrement())
  createdAt       DateTime      @default(now()) @db.Timestamp(6)
  blockNumber     Int
  transactionHash String        @db.VarChar
  timestamp       BigInt
  logIndex        Int
  logData         Json          @db.Json
  marketGroupId   Int?
  market_group    market_group? @relation(fields: [marketGroupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_be2327bfd127f45a55856b4c9de")
  transaction     transaction?

  @@unique([transactionHash, marketGroupId, blockNumber, logIndex], map: "UQ_784b6bb8194a5c7b41a7be2ffa5")
  @@index([timestamp], map: "IDX_2c15918ff289396205521c5f3c")
  @@index([blockNumber], map: "IDX_5430e2d7fe1df2bcada2c12deb")
}

model market {
  id                                 Int           @id(map: "PK_247e7fe519fa359ba924d04f289") @default(autoincrement())
  createdAt                          DateTime      @default(now()) @db.Timestamp(6)
  marketId                           Int
  startTimestamp                     Int?
  endTimestamp                       Int?
  startingSqrtPriceX96               Decimal?      @db.Decimal(78, 0)
  settlementPriceD18                 Decimal?      @db.Decimal(78, 0)
  settled                            Boolean?
  baseAssetMinPriceTick              Int?
  baseAssetMaxPriceTick              Int?
  minPriceD18                        Decimal?      @db.Decimal(78, 0)
  maxPriceD18                        Decimal?      @db.Decimal(78, 0)
  marketGroupId                      Int?
  marketParamsFeerate                Int?
  marketParamsAssertionliveness      Decimal?      @db.Decimal(78, 0)
  marketParamsBondcurrency           String?       @db.VarChar
  marketParamsBondamount             Decimal?      @db.Decimal(78, 0)
  marketParamsClaimstatementYesOrNumeric         String?       @db.VarChar
  marketParamsClaimstatementNo       String?       @db.VarChar
  marketParamsUniswappositionmanager String?       @db.VarChar
  marketParamsUniswapswaprouter      String?       @db.VarChar
  marketParamsUniswapquoter          String?       @db.VarChar
  marketParamsOptimisticoraclev3     String?       @db.VarChar
  public                             Boolean       @default(true)
  question                           String?
  poolAddress                        String?
  optionName                         String?
  rules                              String?
  market_group                       market_group? @relation(fields: [marketGroupId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_02755ce1b56a981eef76c0b59b4")
  position                           position[]

  @@unique([marketGroupId, marketId], map: "UQ_0a0e1fcc7164cb26a957c806314")
  @@unique([marketGroupId, marketId], map: "UQ_6e25995aba1162dc315f8214ee7")
  @@index([marketGroupId], map: "IDX_02755ce1b56a981eef76c0b59b")
  @@index([marketId], map: "IDX_b8cf3f5b97db288fd5252e1cb0")
  @@index([marketGroupId], map: "IDX_bf8c48db94805b3077cfe30fa6")
  @@index([marketId], map: "IDX_f89ec06faf22da268399ae6a9b")
}

model market_group {
  id                                 Int       @id(map: "PK_1e9a2963edfd331d92018e3abac") @default(autoincrement())
  createdAt                          DateTime  @default(now()) @db.Timestamp(6)
  address                            String?   @db.VarChar
  chainId                            Int
  deployTimestamp                    Int?
  deployTxnBlockNumber               Int?
  owner                              String?   @db.VarChar
  collateralAsset                    String?   @db.VarChar
  resourceId                         Int?
  marketParamsFeerate                Int?
  marketParamsAssertionliveness      Decimal?  @db.Decimal(78, 0)
  marketParamsBondcurrency           String?   @db.VarChar
  marketParamsBondamount             Decimal?  @db.Decimal(78, 0)
  marketParamsClaimstatementYesOrNumeric         String?   @db.VarChar
  marketParamsClaimstatementNo       String?   @db.VarChar
  marketParamsUniswappositionmanager String?   @db.VarChar
  marketParamsUniswapswaprouter      String?   @db.VarChar
  marketParamsUniswapquoter          String?   @db.VarChar
  marketParamsOptimisticoraclev3     String?   @db.VarChar
  isBridged                          Boolean   @default(false)
  isCumulative                       Boolean   @default(false)
  categoryId                         Int?
  question                           String?
  baseTokenName                      String?   @db.VarChar
  quoteTokenName                     String?   @db.VarChar
  collateralDecimals                 Int?
  collateralSymbol                   String?   @db.VarChar
  initializationNonce                String?   @db.VarChar
  factoryAddress                     String?   @db.VarChar
  minTradeSize                       Decimal?  @db.Decimal(78, 0)
  event                              event[]
  market                             market[]
  resource                           resource? @relation(fields: [resourceId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_78409a3738729038b76742291f0")
  category                           category? @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f092ffcae41efef68cdc30bbd89")

  @@unique([address, chainId], map: "UQ_b1a3dbc95ad359ef11bfb72b307")
  @@index([address], map: "IDX_4840554118be25e79d9f2cd8c1")
  @@index([chainId], map: "IDX_da0b448860ebff62a08819b65a")
}

model market_price {
  id          Int          @id(map: "PK_2d0e67fad606926d3f44a79bab5") @default(autoincrement())
  createdAt   DateTime     @default(now()) @db.Timestamp(6)
  timestamp   BigInt
  value       Decimal      @db.Decimal(78, 0)
  transaction transaction?

  @@index([timestamp], map: "IDX_a9346cdd1ea1e53a6b87e409ad")
}

model migrations {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar
}

model position {
  id                 Int           @id(map: "PK_b7f483581562b4dc62ae1a5b7e2") @default(autoincrement())
  createdAt          DateTime      @default(now()) @db.Timestamp(6)
  positionId         Int
  owner              String?       @db.VarChar
  isLP               Boolean
  highPriceTick      Decimal?      @db.Decimal(78, 0)
  lowPriceTick       Decimal?      @db.Decimal(78, 0)
  isSettled          Boolean?
  lpBaseToken        Decimal?      @db.Decimal(78, 0)
  lpQuoteToken       Decimal?      @db.Decimal(78, 0)
  baseToken          Decimal?      @db.Decimal(78, 0)
  quoteToken         Decimal?      @db.Decimal(78, 0)
  borrowedBaseToken  Decimal?      @db.Decimal(78, 0)
  borrowedQuoteToken Decimal?      @db.Decimal(78, 0)
  collateral         Decimal       @db.Decimal(78, 0)
  marketId           Int?
  market             market?       @relation(fields: [marketId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_0ad1a3735077091c74287ffc7ca")
  transaction        transaction[]

  @@unique([positionId, marketId], map: "UQ_40d3e2f973bc69ff8e8d0f89dde")
  @@index([positionId], map: "IDX_927edd2b828777f0052366195e")
}

model render_job {
  id        Int      @id(map: "PK_a00488019eafb11b27af1aa1a76") @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  jobId     String   @db.VarChar
  serviceId String   @db.VarChar
}

model resource {
  id             Int              @id(map: "PK_e2894a5867e06ae2e8889f1173f") @default(autoincrement())
  createdAt      DateTime         @default(now()) @db.Timestamp(6)
  name           String           @unique(map: "UQ_c8ed18ff47475e2c4a7bf59daa0") @db.VarChar
  slug           String           @unique(map: "UQ_82453de75cd894e19c42844e706") @db.VarChar
  categoryId     Int?
  market_group   market_group[]
  category       category?        @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_66faacb332a925bf732256594e5")
  resource_price resource_price[]

  @@index([slug], map: "IDX_82453de75cd894e19c42844e70")
}

model resource_price {
  id          Int       @id(map: "PK_a0c8cbfc0d416996af73cae1e97") @default(autoincrement())
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  blockNumber Int
  timestamp   Int
  value       Decimal   @db.Decimal(78, 0)
  used        Decimal   @db.Decimal(78, 0)
  feePaid     Decimal   @db.Decimal(78, 0)
  resourceId  Int?
  resource    resource? @relation(fields: [resourceId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_187fa56af532560ce204719ea39")

  @@unique([resourceId, timestamp], map: "UQ_80c0fe66c45d0dd8f4e744bb30f")
  @@index([resourceId], map: "IDX_187fa56af532560ce204719ea3")
  @@index([blockNumber], map: "IDX_5bbe200849d138539d19b7caa6")
  @@index([timestamp], map: "IDX_a369700ab879af9ef6061c6dbe")
}

model transaction {
  id                   Int                   @id(map: "PK_89eadb93a89810556e1cbcd6ab9") @default(autoincrement())
  createdAt            DateTime              @default(now()) @db.Timestamp(6)
  tradeRatioD18        Decimal?              @db.Decimal(78, 0)
  type                 transaction_type_enum
  baseToken            Decimal?              @db.Decimal(78, 0)
  quoteToken           Decimal?              @db.Decimal(78, 0)
  borrowedBaseToken    Decimal?              @db.Decimal(78, 0)
  borrowedQuoteToken   Decimal?              @db.Decimal(78, 0)
  collateral           Decimal               @db.Decimal(78, 0)
  lpBaseDeltaToken     Decimal?              @db.Decimal(78, 0)
  lpQuoteDeltaToken    Decimal?              @db.Decimal(78, 0)
  eventId              Int?                  @unique(map: "REL_f8aba9691e84fbd42400be9ce8")
  positionId           Int?
  marketPriceId        Int?                  @unique(map: "REL_91ebc2a6a20b2b1ac354cfae98")
  collateralTransferId Int?                  @unique(map: "REL_23dff7d5a1d6601cf90eb5019a")
  collateral_transfer  collateral_transfer?  @relation(fields: [collateralTransferId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_23dff7d5a1d6601cf90eb5019a3")
  market_price         market_price?         @relation(fields: [marketPriceId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_91ebc2a6a20b2b1ac354cfae981")
  event                event?                @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_f8aba9691e84fbd42400be9ce8a")
  position             position?             @relation(fields: [positionId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ffeefe4d2253a6af172da38fc49")
}

enum transaction_type_enum {
  addLiquidity
  removeLiquidity
  long
  short
  settledPosition
}
