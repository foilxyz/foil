"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0";
exports.ids = ["vendor-chunks/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js ***!
  \***********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AttributeNames = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Mysql specific attributes not covered by semantic conventions\nvar AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"MYSQL_VALUES\"] = \"db.mysql.values\";\n})(AttributeNames = exports.AttributeNames || (exports.AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL0F0dHJpYnV0ZU5hbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDLHNCQUFzQixLQUFLO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGZvaWwvYXBwLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy9BdHRyaWJ1dGVOYW1lcy5qcz9jMDJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG4vLyBNeXNxbCBzcGVjaWZpYyBhdHRyaWJ1dGVzIG5vdCBjb3ZlcmVkIGJ5IHNlbWFudGljIGNvbnZlbnRpb25zXG52YXIgQXR0cmlidXRlTmFtZXM7XG4oZnVuY3Rpb24gKEF0dHJpYnV0ZU5hbWVzKSB7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJNWVNRTF9WQUxVRVNcIl0gPSBcImRiLm15c3FsLnZhbHVlc1wiO1xufSkoQXR0cmlidXRlTmFtZXMgPSBleHBvcnRzLkF0dHJpYnV0ZU5hbWVzIHx8IChleHBvcnRzLkF0dHJpYnV0ZU5hbWVzID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF0dHJpYnV0ZU5hbWVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./instrumentation */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsNk1BQW1CO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQyx5TEFBUztBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bmb2lsL2FwcC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLW15c3FsQDAuNDEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1teXNxbC9idWlsZC9zcmMvaW5kZXguanM/OGYxZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pbnN0cnVtZW50YXRpb25cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGZvaWwvYXBwLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy90eXBlcy5qcz9jZDE2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getPoolName = exports.arrayStringifyHelper = exports.getSpanName = exports.getDbValues = exports.getDbStatement = exports.getConnectionAttributes = void 0;\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.28.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\n/**\n * Get an Attributes map from a mysql connection config object\n *\n * @param config ConnectionConfig\n */\nfunction getConnectionAttributes(config) {\n    const { host, port, database, user } = getConfig(config);\n    const portNumber = parseInt(port, 10);\n    if (!isNaN(portNumber)) {\n        return {\n            [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: host,\n            [semantic_conventions_1.SEMATTRS_NET_PEER_PORT]: portNumber,\n            [semantic_conventions_1.SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n            [semantic_conventions_1.SEMATTRS_DB_NAME]: database,\n            [semantic_conventions_1.SEMATTRS_DB_USER]: user,\n        };\n    }\n    return {\n        [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: host,\n        [semantic_conventions_1.SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n        [semantic_conventions_1.SEMATTRS_DB_NAME]: database,\n        [semantic_conventions_1.SEMATTRS_DB_USER]: user,\n    };\n}\nexports.getConnectionAttributes = getConnectionAttributes;\nfunction getConfig(config) {\n    const { host, port, database, user } = (config && config.connectionConfig) || config || {};\n    return { host, port, database, user };\n}\nfunction getJDBCString(host, port, database) {\n    let jdbcString = `jdbc:mysql://${host || 'localhost'}`;\n    if (typeof port === 'number') {\n        jdbcString += `:${port}`;\n    }\n    if (typeof database === 'string') {\n        jdbcString += `/${database}`;\n    }\n    return jdbcString;\n}\n/**\n * @returns the database statement being executed.\n */\nfunction getDbStatement(query) {\n    if (typeof query === 'string') {\n        return query;\n    }\n    else {\n        return query.sql;\n    }\n}\nexports.getDbStatement = getDbStatement;\nfunction getDbValues(query, values) {\n    if (typeof query === 'string') {\n        return arrayStringifyHelper(values);\n    }\n    else {\n        // According to https://github.com/mysqljs/mysql#performing-queries\n        // The values argument will override the values in the option object.\n        return arrayStringifyHelper(values || query.values);\n    }\n}\nexports.getDbValues = getDbValues;\n/**\n * The span name SHOULD be set to a low cardinality value\n * representing the statement executed on the database.\n *\n * @returns SQL statement without variable arguments or SQL verb\n */\nfunction getSpanName(query) {\n    if (typeof query === 'object') {\n        return query.sql;\n    }\n    return query.split(' ')[0];\n}\nexports.getSpanName = getSpanName;\nfunction arrayStringifyHelper(arr) {\n    if (arr)\n        return `[${arr.toString()}]`;\n    return '';\n}\nexports.arrayStringifyHelper = arrayStringifyHelper;\nfunction getPoolName(pool) {\n    const c = pool.config.connectionConfig;\n    let poolName = '';\n    poolName += c.host ? `host: '${c.host}', ` : '';\n    poolName += c.port ? `port: ${c.port}, ` : '';\n    poolName += c.database ? `database: '${c.database}', ` : '';\n    poolName += c.user ? `user: '${c.user}'` : '';\n    if (!c.user) {\n        poolName = poolName.substring(0, poolName.length - 2); //omit last comma\n    }\n    return poolName.trim();\n}\nexports.getPoolName = getPoolName;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLDRCQUE0QixHQUFHLG1CQUFtQixHQUFHLG1CQUFtQixHQUFHLHNCQUFzQixHQUFHLCtCQUErQjtBQUN6SiwrQkFBK0IsbUJBQU8sQ0FBQywwTEFBcUM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2QkFBNkI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDLGFBQWE7QUFDYjtBQUNBO0FBQ0EscUNBQXFDLG9CQUFvQjtBQUN6RDtBQUNBLDBCQUEwQixLQUFLO0FBQy9CO0FBQ0E7QUFDQSwwQkFBMEIsU0FBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EsbUJBQW1CLGVBQWU7QUFDbEM7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsT0FBTztBQUMxQyxrQ0FBa0MsT0FBTztBQUN6QywyQ0FBMkMsV0FBVztBQUN0RCxtQ0FBbUMsT0FBTztBQUMxQztBQUNBLCtEQUErRDtBQUMvRDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZm9pbC9hcHAvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL3V0aWxzLmpzP2EwMTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRQb29sTmFtZSA9IGV4cG9ydHMuYXJyYXlTdHJpbmdpZnlIZWxwZXIgPSBleHBvcnRzLmdldFNwYW5OYW1lID0gZXhwb3J0cy5nZXREYlZhbHVlcyA9IGV4cG9ydHMuZ2V0RGJTdGF0ZW1lbnQgPSBleHBvcnRzLmdldENvbm5lY3Rpb25BdHRyaWJ1dGVzID0gdm9pZCAwO1xuY29uc3Qgc2VtYW50aWNfY29udmVudGlvbnNfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9zZW1hbnRpYy1jb252ZW50aW9uc1wiKTtcbi8qKlxuICogR2V0IGFuIEF0dHJpYnV0ZXMgbWFwIGZyb20gYSBteXNxbCBjb25uZWN0aW9uIGNvbmZpZyBvYmplY3RcbiAqXG4gKiBAcGFyYW0gY29uZmlnIENvbm5lY3Rpb25Db25maWdcbiAqL1xuZnVuY3Rpb24gZ2V0Q29ubmVjdGlvbkF0dHJpYnV0ZXMoY29uZmlnKSB7XG4gICAgY29uc3QgeyBob3N0LCBwb3J0LCBkYXRhYmFzZSwgdXNlciB9ID0gZ2V0Q29uZmlnKGNvbmZpZyk7XG4gICAgY29uc3QgcG9ydE51bWJlciA9IHBhcnNlSW50KHBvcnQsIDEwKTtcbiAgICBpZiAoIWlzTmFOKHBvcnROdW1iZXIpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19ORVRfUEVFUl9OQU1FXTogaG9zdCxcbiAgICAgICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX05FVF9QRUVSX1BPUlRdOiBwb3J0TnVtYmVyLFxuICAgICAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfQ09OTkVDVElPTl9TVFJJTkddOiBnZXRKREJDU3RyaW5nKGhvc3QsIHBvcnQsIGRhdGFiYXNlKSxcbiAgICAgICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX0RCX05BTUVdOiBkYXRhYmFzZSxcbiAgICAgICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX0RCX1VTRVJdOiB1c2VyLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19ORVRfUEVFUl9OQU1FXTogaG9zdCxcbiAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfQ09OTkVDVElPTl9TVFJJTkddOiBnZXRKREJDU3RyaW5nKGhvc3QsIHBvcnQsIGRhdGFiYXNlKSxcbiAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfTkFNRV06IGRhdGFiYXNlLFxuICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19EQl9VU0VSXTogdXNlcixcbiAgICB9O1xufVxuZXhwb3J0cy5nZXRDb25uZWN0aW9uQXR0cmlidXRlcyA9IGdldENvbm5lY3Rpb25BdHRyaWJ1dGVzO1xuZnVuY3Rpb24gZ2V0Q29uZmlnKGNvbmZpZykge1xuICAgIGNvbnN0IHsgaG9zdCwgcG9ydCwgZGF0YWJhc2UsIHVzZXIgfSA9IChjb25maWcgJiYgY29uZmlnLmNvbm5lY3Rpb25Db25maWcpIHx8IGNvbmZpZyB8fCB7fTtcbiAgICByZXR1cm4geyBob3N0LCBwb3J0LCBkYXRhYmFzZSwgdXNlciB9O1xufVxuZnVuY3Rpb24gZ2V0SkRCQ1N0cmluZyhob3N0LCBwb3J0LCBkYXRhYmFzZSkge1xuICAgIGxldCBqZGJjU3RyaW5nID0gYGpkYmM6bXlzcWw6Ly8ke2hvc3QgfHwgJ2xvY2FsaG9zdCd9YDtcbiAgICBpZiAodHlwZW9mIHBvcnQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIGpkYmNTdHJpbmcgKz0gYDoke3BvcnR9YDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgamRiY1N0cmluZyArPSBgLyR7ZGF0YWJhc2V9YDtcbiAgICB9XG4gICAgcmV0dXJuIGpkYmNTdHJpbmc7XG59XG4vKipcbiAqIEByZXR1cm5zIHRoZSBkYXRhYmFzZSBzdGF0ZW1lbnQgYmVpbmcgZXhlY3V0ZWQuXG4gKi9cbmZ1bmN0aW9uIGdldERiU3RhdGVtZW50KHF1ZXJ5KSB7XG4gICAgaWYgKHR5cGVvZiBxdWVyeSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHF1ZXJ5O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHF1ZXJ5LnNxbDtcbiAgICB9XG59XG5leHBvcnRzLmdldERiU3RhdGVtZW50ID0gZ2V0RGJTdGF0ZW1lbnQ7XG5mdW5jdGlvbiBnZXREYlZhbHVlcyhxdWVyeSwgdmFsdWVzKSB7XG4gICAgaWYgKHR5cGVvZiBxdWVyeSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGFycmF5U3RyaW5naWZ5SGVscGVyKHZhbHVlcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBBY2NvcmRpbmcgdG8gaHR0cHM6Ly9naXRodWIuY29tL215c3FsanMvbXlzcWwjcGVyZm9ybWluZy1xdWVyaWVzXG4gICAgICAgIC8vIFRoZSB2YWx1ZXMgYXJndW1lbnQgd2lsbCBvdmVycmlkZSB0aGUgdmFsdWVzIGluIHRoZSBvcHRpb24gb2JqZWN0LlxuICAgICAgICByZXR1cm4gYXJyYXlTdHJpbmdpZnlIZWxwZXIodmFsdWVzIHx8IHF1ZXJ5LnZhbHVlcyk7XG4gICAgfVxufVxuZXhwb3J0cy5nZXREYlZhbHVlcyA9IGdldERiVmFsdWVzO1xuLyoqXG4gKiBUaGUgc3BhbiBuYW1lIFNIT1VMRCBiZSBzZXQgdG8gYSBsb3cgY2FyZGluYWxpdHkgdmFsdWVcbiAqIHJlcHJlc2VudGluZyB0aGUgc3RhdGVtZW50IGV4ZWN1dGVkIG9uIHRoZSBkYXRhYmFzZS5cbiAqXG4gKiBAcmV0dXJucyBTUUwgc3RhdGVtZW50IHdpdGhvdXQgdmFyaWFibGUgYXJndW1lbnRzIG9yIFNRTCB2ZXJiXG4gKi9cbmZ1bmN0aW9uIGdldFNwYW5OYW1lKHF1ZXJ5KSB7XG4gICAgaWYgKHR5cGVvZiBxdWVyeSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIHF1ZXJ5LnNxbDtcbiAgICB9XG4gICAgcmV0dXJuIHF1ZXJ5LnNwbGl0KCcgJylbMF07XG59XG5leHBvcnRzLmdldFNwYW5OYW1lID0gZ2V0U3Bhbk5hbWU7XG5mdW5jdGlvbiBhcnJheVN0cmluZ2lmeUhlbHBlcihhcnIpIHtcbiAgICBpZiAoYXJyKVxuICAgICAgICByZXR1cm4gYFske2Fyci50b1N0cmluZygpfV1gO1xuICAgIHJldHVybiAnJztcbn1cbmV4cG9ydHMuYXJyYXlTdHJpbmdpZnlIZWxwZXIgPSBhcnJheVN0cmluZ2lmeUhlbHBlcjtcbmZ1bmN0aW9uIGdldFBvb2xOYW1lKHBvb2wpIHtcbiAgICBjb25zdCBjID0gcG9vbC5jb25maWcuY29ubmVjdGlvbkNvbmZpZztcbiAgICBsZXQgcG9vbE5hbWUgPSAnJztcbiAgICBwb29sTmFtZSArPSBjLmhvc3QgPyBgaG9zdDogJyR7Yy5ob3N0fScsIGAgOiAnJztcbiAgICBwb29sTmFtZSArPSBjLnBvcnQgPyBgcG9ydDogJHtjLnBvcnR9LCBgIDogJyc7XG4gICAgcG9vbE5hbWUgKz0gYy5kYXRhYmFzZSA/IGBkYXRhYmFzZTogJyR7Yy5kYXRhYmFzZX0nLCBgIDogJyc7XG4gICAgcG9vbE5hbWUgKz0gYy51c2VyID8gYHVzZXI6ICcke2MudXNlcn0nYCA6ICcnO1xuICAgIGlmICghYy51c2VyKSB7XG4gICAgICAgIHBvb2xOYW1lID0gcG9vbE5hbWUuc3Vic3RyaW5nKDAsIHBvb2xOYW1lLmxlbmd0aCAtIDIpOyAvL29taXQgbGFzdCBjb21tYVxuICAgIH1cbiAgICByZXR1cm4gcG9vbE5hbWUudHJpbSgpO1xufVxuZXhwb3J0cy5nZXRQb29sTmFtZSA9IGdldFBvb2xOYW1lO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.41.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-mysql';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsdUJBQXVCO0FBQzlDO0FBQ0EsdUJBQXVCO0FBQ3ZCLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bmb2lsL2FwcC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLW15c3FsQDAuNDEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1teXNxbC9idWlsZC9zcmMvdmVyc2lvbi5qcz82NjQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuNDEuMCc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js":
/*!************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js ***!
  \************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = \"/monitoring\";globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MySQLInstrumentation = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.53.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.28.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./AttributeNames */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js\");\nconst version_1 = __webpack_require__(/*! ./version */ \"(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js\");\nclass MySQLInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n        this._setMetricInstruments();\n    }\n    setMeterProvider(meterProvider) {\n        super.setMeterProvider(meterProvider);\n        this._setMetricInstruments();\n    }\n    _setMetricInstruments() {\n        this._connectionsUsage = this.meter.createUpDownCounter('db.client.connections.usage', //TODO:: use semantic convention\n        {\n            description: 'The number of connections that are currently in state described by the state attribute.',\n            unit: '{connection}',\n        });\n    }\n    init() {\n        return [\n            new instrumentation_1.InstrumentationNodeModuleDefinition('mysql', ['>=2.0.0 <3'], (moduleExports) => {\n                if ((0, instrumentation_1.isWrapped)(moduleExports.createConnection)) {\n                    this._unwrap(moduleExports, 'createConnection');\n                }\n                this._wrap(moduleExports, 'createConnection', this._patchCreateConnection());\n                if ((0, instrumentation_1.isWrapped)(moduleExports.createPool)) {\n                    this._unwrap(moduleExports, 'createPool');\n                }\n                this._wrap(moduleExports, 'createPool', this._patchCreatePool());\n                if ((0, instrumentation_1.isWrapped)(moduleExports.createPoolCluster)) {\n                    this._unwrap(moduleExports, 'createPoolCluster');\n                }\n                this._wrap(moduleExports, 'createPoolCluster', this._patchCreatePoolCluster());\n                return moduleExports;\n            }, (moduleExports) => {\n                if (moduleExports === undefined)\n                    return;\n                this._unwrap(moduleExports, 'createConnection');\n                this._unwrap(moduleExports, 'createPool');\n                this._unwrap(moduleExports, 'createPoolCluster');\n            }),\n        ];\n    }\n    // global export function\n    _patchCreateConnection() {\n        return (originalCreateConnection) => {\n            const thisPlugin = this;\n            return function createConnection(_connectionUri) {\n                const originalResult = originalCreateConnection(...arguments);\n                // This is unwrapped on next call after unpatch\n                thisPlugin._wrap(originalResult, 'query', thisPlugin._patchQuery(originalResult));\n                return originalResult;\n            };\n        };\n    }\n    // global export function\n    _patchCreatePool() {\n        return (originalCreatePool) => {\n            const thisPlugin = this;\n            return function createPool(_config) {\n                const pool = originalCreatePool(...arguments);\n                thisPlugin._wrap(pool, 'query', thisPlugin._patchQuery(pool));\n                thisPlugin._wrap(pool, 'getConnection', thisPlugin._patchGetConnection(pool));\n                thisPlugin._wrap(pool, 'end', thisPlugin._patchPoolEnd(pool));\n                thisPlugin._setPoolcallbacks(pool, thisPlugin, '');\n                return pool;\n            };\n        };\n    }\n    _patchPoolEnd(pool) {\n        return (originalPoolEnd) => {\n            const thisPlugin = this;\n            return function end(callback) {\n                const nAll = pool._allConnections.length;\n                const nFree = pool._freeConnections.length;\n                const nUsed = nAll - nFree;\n                const poolName = (0, utils_1.getPoolName)(pool);\n                thisPlugin._connectionsUsage.add(-nUsed, {\n                    state: 'used',\n                    name: poolName,\n                });\n                thisPlugin._connectionsUsage.add(-nFree, {\n                    state: 'idle',\n                    name: poolName,\n                });\n                originalPoolEnd.apply(pool, arguments);\n            };\n        };\n    }\n    // global export function\n    _patchCreatePoolCluster() {\n        return (originalCreatePoolCluster) => {\n            const thisPlugin = this;\n            return function createPool(_config) {\n                const cluster = originalCreatePoolCluster(...arguments);\n                // This is unwrapped on next call after unpatch\n                thisPlugin._wrap(cluster, 'getConnection', thisPlugin._patchGetConnection(cluster));\n                thisPlugin._wrap(cluster, 'add', thisPlugin._patchAdd(cluster));\n                return cluster;\n            };\n        };\n    }\n    _patchAdd(cluster) {\n        return (originalAdd) => {\n            const thisPlugin = this;\n            return function add(id, config) {\n                // Unwrap if unpatch has been called\n                if (!thisPlugin['_enabled']) {\n                    thisPlugin._unwrap(cluster, 'add');\n                    return originalAdd.apply(cluster, arguments);\n                }\n                originalAdd.apply(cluster, arguments);\n                const nodes = cluster['_nodes'];\n                if (nodes) {\n                    const nodeId = typeof id === 'object'\n                        ? 'CLUSTER::' + cluster._lastId\n                        : String(id);\n                    const pool = nodes[nodeId].pool;\n                    thisPlugin._setPoolcallbacks(pool, thisPlugin, id);\n                }\n            };\n        };\n    }\n    // method on cluster or pool\n    _patchGetConnection(pool) {\n        return (originalGetConnection) => {\n            const thisPlugin = this;\n            return function getConnection(arg1, arg2, arg3) {\n                // Unwrap if unpatch has been called\n                if (!thisPlugin['_enabled']) {\n                    thisPlugin._unwrap(pool, 'getConnection');\n                    return originalGetConnection.apply(pool, arguments);\n                }\n                if (arguments.length === 1 && typeof arg1 === 'function') {\n                    const patchFn = thisPlugin._getConnectionCallbackPatchFn(arg1);\n                    return originalGetConnection.call(pool, patchFn);\n                }\n                if (arguments.length === 2 && typeof arg2 === 'function') {\n                    const patchFn = thisPlugin._getConnectionCallbackPatchFn(arg2);\n                    return originalGetConnection.call(pool, arg1, patchFn);\n                }\n                if (arguments.length === 3 && typeof arg3 === 'function') {\n                    const patchFn = thisPlugin._getConnectionCallbackPatchFn(arg3);\n                    return originalGetConnection.call(pool, arg1, arg2, patchFn);\n                }\n                return originalGetConnection.apply(pool, arguments);\n            };\n        };\n    }\n    _getConnectionCallbackPatchFn(cb) {\n        const thisPlugin = this;\n        const activeContext = api_1.context.active();\n        return function (err, connection) {\n            if (connection) {\n                // this is the callback passed into a query\n                // no need to unwrap\n                if (!(0, instrumentation_1.isWrapped)(connection.query)) {\n                    thisPlugin._wrap(connection, 'query', thisPlugin._patchQuery(connection));\n                }\n            }\n            if (typeof cb === 'function') {\n                api_1.context.with(activeContext, cb, this, err, connection);\n            }\n        };\n    }\n    _patchQuery(connection) {\n        return (originalQuery) => {\n            const thisPlugin = this;\n            return function query(query, _valuesOrCallback, _callback) {\n                if (!thisPlugin['_enabled']) {\n                    thisPlugin._unwrap(connection, 'query');\n                    return originalQuery.apply(connection, arguments);\n                }\n                const span = thisPlugin.tracer.startSpan((0, utils_1.getSpanName)(query), {\n                    kind: api_1.SpanKind.CLIENT,\n                    attributes: Object.assign(Object.assign({}, MySQLInstrumentation.COMMON_ATTRIBUTES), (0, utils_1.getConnectionAttributes)(connection.config)),\n                });\n                span.setAttribute(semantic_conventions_1.SEMATTRS_DB_STATEMENT, (0, utils_1.getDbStatement)(query));\n                if (thisPlugin.getConfig().enhancedDatabaseReporting) {\n                    let values;\n                    if (Array.isArray(_valuesOrCallback)) {\n                        values = _valuesOrCallback;\n                    }\n                    else if (arguments[2]) {\n                        values = [_valuesOrCallback];\n                    }\n                    span.setAttribute(AttributeNames_1.AttributeNames.MYSQL_VALUES, (0, utils_1.getDbValues)(query, values));\n                }\n                const cbIndex = Array.from(arguments).findIndex(arg => typeof arg === 'function');\n                const parentContext = api_1.context.active();\n                if (cbIndex === -1) {\n                    const streamableQuery = api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n                        return originalQuery.apply(connection, arguments);\n                    });\n                    api_1.context.bind(parentContext, streamableQuery);\n                    return streamableQuery\n                        .on('error', err => span.setStatus({\n                        code: api_1.SpanStatusCode.ERROR,\n                        message: err.message,\n                    }))\n                        .on('end', () => {\n                        span.end();\n                    });\n                }\n                else {\n                    thisPlugin._wrap(arguments, cbIndex, thisPlugin._patchCallbackQuery(span, parentContext));\n                    return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n                        return originalQuery.apply(connection, arguments);\n                    });\n                }\n            };\n        };\n    }\n    _patchCallbackQuery(span, parentContext) {\n        return (originalCallback) => {\n            return function (err, results, fields) {\n                if (err) {\n                    span.setStatus({\n                        code: api_1.SpanStatusCode.ERROR,\n                        message: err.message,\n                    });\n                }\n                span.end();\n                return api_1.context.with(parentContext, () => originalCallback(...arguments));\n            };\n        };\n    }\n    _setPoolcallbacks(pool, thisPlugin, id) {\n        //TODO:: use semantic convention\n        const poolName = id || (0, utils_1.getPoolName)(pool);\n        pool.on('connection', connection => {\n            thisPlugin._connectionsUsage.add(1, {\n                state: 'idle',\n                name: poolName,\n            });\n        });\n        pool.on('acquire', connection => {\n            thisPlugin._connectionsUsage.add(-1, {\n                state: 'idle',\n                name: poolName,\n            });\n            thisPlugin._connectionsUsage.add(1, {\n                state: 'used',\n                name: poolName,\n            });\n        });\n        pool.on('release', connection => {\n            thisPlugin._connectionsUsage.add(-1, {\n                state: 'used',\n                name: poolName,\n            });\n            thisPlugin._connectionsUsage.add(1, {\n                state: 'idle',\n                name: poolName,\n            });\n        });\n    }\n}\nexports.MySQLInstrumentation = MySQLInstrumentation;\nMySQLInstrumentation.COMMON_ATTRIBUTES = {\n    [semantic_conventions_1.SEMATTRS_DB_SYSTEM]: semantic_conventions_1.DBSYSTEMVALUES_MYSQL,\n};\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL2luc3RydW1lbnRhdGlvbi5qcyIsIm1hcHBpbmdzIjoiQUFBYSxDQUFDLHdEQUF3RCx5Q0FBeUMsMENBQTBDO0FBQ3pKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEI7QUFDNUIsY0FBYyxtQkFBTyxDQUFDLHNJQUFvQjtBQUMxQywwQkFBMEIsbUJBQU8sQ0FBQyxvTUFBZ0M7QUFDbEUsK0JBQStCLG1CQUFPLENBQUMsMExBQXFDO0FBQzVFLHlCQUF5QixtQkFBTyxDQUFDLDJNQUFrQjtBQUNuRCxnQkFBZ0IsbUJBQU8sQ0FBQyx5TEFBUztBQUNqQyxrQkFBa0IsbUJBQU8sQ0FBQyw2TEFBVztBQUNyQztBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFdBQVc7QUFDL0IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RDtBQUM5RCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZm9pbC9hcHAvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL2luc3RydW1lbnRhdGlvbi5qcz81Yjg3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiOztnbG9iYWxUaGlzW1wiX3NlbnRyeVJld3JpdGVzVHVubmVsUGF0aFwiXSA9IFwiL21vbml0b3JpbmdcIjtnbG9iYWxUaGlzW1wiU0VOVFJZX1JFTEVBU0VcIl0gPSB1bmRlZmluZWQ7Z2xvYmFsVGhpc1tcIl9zZW50cnlCYXNlUGF0aFwiXSA9IHVuZGVmaW5lZDtnbG9iYWxUaGlzW1wiX3NlbnRyeVJld3JpdGVGcmFtZXNEaXN0RGlyXCJdID0gXCIubmV4dFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTXlTUUxJbnN0cnVtZW50YXRpb24gPSB2b2lkIDA7XG5jb25zdCBhcGlfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9hcGlcIik7XG5jb25zdCBpbnN0cnVtZW50YXRpb25fMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb25cIik7XG5jb25zdCBzZW1hbnRpY19jb252ZW50aW9uc18xID0gcmVxdWlyZShcIkBvcGVudGVsZW1ldHJ5L3NlbWFudGljLWNvbnZlbnRpb25zXCIpO1xuY29uc3QgQXR0cmlidXRlTmFtZXNfMSA9IHJlcXVpcmUoXCIuL0F0dHJpYnV0ZU5hbWVzXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgdmVyc2lvbl8xID0gcmVxdWlyZShcIi4vdmVyc2lvblwiKTtcbmNsYXNzIE15U1FMSW5zdHJ1bWVudGF0aW9uIGV4dGVuZHMgaW5zdHJ1bWVudGF0aW9uXzEuSW5zdHJ1bWVudGF0aW9uQmFzZSB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnID0ge30pIHtcbiAgICAgICAgc3VwZXIodmVyc2lvbl8xLlBBQ0tBR0VfTkFNRSwgdmVyc2lvbl8xLlBBQ0tBR0VfVkVSU0lPTiwgY29uZmlnKTtcbiAgICAgICAgdGhpcy5fc2V0TWV0cmljSW5zdHJ1bWVudHMoKTtcbiAgICB9XG4gICAgc2V0TWV0ZXJQcm92aWRlcihtZXRlclByb3ZpZGVyKSB7XG4gICAgICAgIHN1cGVyLnNldE1ldGVyUHJvdmlkZXIobWV0ZXJQcm92aWRlcik7XG4gICAgICAgIHRoaXMuX3NldE1ldHJpY0luc3RydW1lbnRzKCk7XG4gICAgfVxuICAgIF9zZXRNZXRyaWNJbnN0cnVtZW50cygpIHtcbiAgICAgICAgdGhpcy5fY29ubmVjdGlvbnNVc2FnZSA9IHRoaXMubWV0ZXIuY3JlYXRlVXBEb3duQ291bnRlcignZGIuY2xpZW50LmNvbm5lY3Rpb25zLnVzYWdlJywgLy9UT0RPOjogdXNlIHNlbWFudGljIGNvbnZlbnRpb25cbiAgICAgICAge1xuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdUaGUgbnVtYmVyIG9mIGNvbm5lY3Rpb25zIHRoYXQgYXJlIGN1cnJlbnRseSBpbiBzdGF0ZSBkZXNjcmliZWQgYnkgdGhlIHN0YXRlIGF0dHJpYnV0ZS4nLFxuICAgICAgICAgICAgdW5pdDogJ3tjb25uZWN0aW9ufScsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpbml0KCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgbmV3IGluc3RydW1lbnRhdGlvbl8xLkluc3RydW1lbnRhdGlvbk5vZGVNb2R1bGVEZWZpbml0aW9uKCdteXNxbCcsIFsnPj0yLjAuMCA8MyddLCAobW9kdWxlRXhwb3J0cykgPT4ge1xuICAgICAgICAgICAgICAgIGlmICgoMCwgaW5zdHJ1bWVudGF0aW9uXzEuaXNXcmFwcGVkKShtb2R1bGVFeHBvcnRzLmNyZWF0ZUNvbm5lY3Rpb24pKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3Vud3JhcChtb2R1bGVFeHBvcnRzLCAnY3JlYXRlQ29ubmVjdGlvbicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLl93cmFwKG1vZHVsZUV4cG9ydHMsICdjcmVhdGVDb25uZWN0aW9uJywgdGhpcy5fcGF0Y2hDcmVhdGVDb25uZWN0aW9uKCkpO1xuICAgICAgICAgICAgICAgIGlmICgoMCwgaW5zdHJ1bWVudGF0aW9uXzEuaXNXcmFwcGVkKShtb2R1bGVFeHBvcnRzLmNyZWF0ZVBvb2wpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3Vud3JhcChtb2R1bGVFeHBvcnRzLCAnY3JlYXRlUG9vbCcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aGlzLl93cmFwKG1vZHVsZUV4cG9ydHMsICdjcmVhdGVQb29sJywgdGhpcy5fcGF0Y2hDcmVhdGVQb29sKCkpO1xuICAgICAgICAgICAgICAgIGlmICgoMCwgaW5zdHJ1bWVudGF0aW9uXzEuaXNXcmFwcGVkKShtb2R1bGVFeHBvcnRzLmNyZWF0ZVBvb2xDbHVzdGVyKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl91bndyYXAobW9kdWxlRXhwb3J0cywgJ2NyZWF0ZVBvb2xDbHVzdGVyJyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMuX3dyYXAobW9kdWxlRXhwb3J0cywgJ2NyZWF0ZVBvb2xDbHVzdGVyJywgdGhpcy5fcGF0Y2hDcmVhdGVQb29sQ2x1c3RlcigpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbW9kdWxlRXhwb3J0cztcbiAgICAgICAgICAgIH0sIChtb2R1bGVFeHBvcnRzKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG1vZHVsZUV4cG9ydHMgPT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIHRoaXMuX3Vud3JhcChtb2R1bGVFeHBvcnRzLCAnY3JlYXRlQ29ubmVjdGlvbicpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3Vud3JhcChtb2R1bGVFeHBvcnRzLCAnY3JlYXRlUG9vbCcpO1xuICAgICAgICAgICAgICAgIHRoaXMuX3Vud3JhcChtb2R1bGVFeHBvcnRzLCAnY3JlYXRlUG9vbENsdXN0ZXInKTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBdO1xuICAgIH1cbiAgICAvLyBnbG9iYWwgZXhwb3J0IGZ1bmN0aW9uXG4gICAgX3BhdGNoQ3JlYXRlQ29ubmVjdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIChvcmlnaW5hbENyZWF0ZUNvbm5lY3Rpb24pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRoaXNQbHVnaW4gPSB0aGlzO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb24oX2Nvbm5lY3Rpb25VcmkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbFJlc3VsdCA9IG9yaWdpbmFsQ3JlYXRlQ29ubmVjdGlvbiguLi5hcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgIC8vIFRoaXMgaXMgdW53cmFwcGVkIG9uIG5leHQgY2FsbCBhZnRlciB1bnBhdGNoXG4gICAgICAgICAgICAgICAgdGhpc1BsdWdpbi5fd3JhcChvcmlnaW5hbFJlc3VsdCwgJ3F1ZXJ5JywgdGhpc1BsdWdpbi5fcGF0Y2hRdWVyeShvcmlnaW5hbFJlc3VsdCkpO1xuICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbFJlc3VsdDtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIGdsb2JhbCBleHBvcnQgZnVuY3Rpb25cbiAgICBfcGF0Y2hDcmVhdGVQb29sKCkge1xuICAgICAgICByZXR1cm4gKG9yaWdpbmFsQ3JlYXRlUG9vbCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGhpc1BsdWdpbiA9IHRoaXM7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gY3JlYXRlUG9vbChfY29uZmlnKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcG9vbCA9IG9yaWdpbmFsQ3JlYXRlUG9vbCguLi5hcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgIHRoaXNQbHVnaW4uX3dyYXAocG9vbCwgJ3F1ZXJ5JywgdGhpc1BsdWdpbi5fcGF0Y2hRdWVyeShwb29sKSk7XG4gICAgICAgICAgICAgICAgdGhpc1BsdWdpbi5fd3JhcChwb29sLCAnZ2V0Q29ubmVjdGlvbicsIHRoaXNQbHVnaW4uX3BhdGNoR2V0Q29ubmVjdGlvbihwb29sKSk7XG4gICAgICAgICAgICAgICAgdGhpc1BsdWdpbi5fd3JhcChwb29sLCAnZW5kJywgdGhpc1BsdWdpbi5fcGF0Y2hQb29sRW5kKHBvb2wpKTtcbiAgICAgICAgICAgICAgICB0aGlzUGx1Z2luLl9zZXRQb29sY2FsbGJhY2tzKHBvb2wsIHRoaXNQbHVnaW4sICcnKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcG9vbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfVxuICAgIF9wYXRjaFBvb2xFbmQocG9vbCkge1xuICAgICAgICByZXR1cm4gKG9yaWdpbmFsUG9vbEVuZCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGhpc1BsdWdpbiA9IHRoaXM7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gZW5kKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbkFsbCA9IHBvb2wuX2FsbENvbm5lY3Rpb25zLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBjb25zdCBuRnJlZSA9IHBvb2wuX2ZyZWVDb25uZWN0aW9ucy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgY29uc3QgblVzZWQgPSBuQWxsIC0gbkZyZWU7XG4gICAgICAgICAgICAgICAgY29uc3QgcG9vbE5hbWUgPSAoMCwgdXRpbHNfMS5nZXRQb29sTmFtZSkocG9vbCk7XG4gICAgICAgICAgICAgICAgdGhpc1BsdWdpbi5fY29ubmVjdGlvbnNVc2FnZS5hZGQoLW5Vc2VkLCB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlOiAndXNlZCcsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHBvb2xOYW1lLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHRoaXNQbHVnaW4uX2Nvbm5lY3Rpb25zVXNhZ2UuYWRkKC1uRnJlZSwge1xuICAgICAgICAgICAgICAgICAgICBzdGF0ZTogJ2lkbGUnLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiBwb29sTmFtZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBvcmlnaW5hbFBvb2xFbmQuYXBwbHkocG9vbCwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIGdsb2JhbCBleHBvcnQgZnVuY3Rpb25cbiAgICBfcGF0Y2hDcmVhdGVQb29sQ2x1c3RlcigpIHtcbiAgICAgICAgcmV0dXJuIChvcmlnaW5hbENyZWF0ZVBvb2xDbHVzdGVyKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0aGlzUGx1Z2luID0gdGhpcztcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiBjcmVhdGVQb29sKF9jb25maWcpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjbHVzdGVyID0gb3JpZ2luYWxDcmVhdGVQb29sQ2x1c3RlciguLi5hcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgIC8vIFRoaXMgaXMgdW53cmFwcGVkIG9uIG5leHQgY2FsbCBhZnRlciB1bnBhdGNoXG4gICAgICAgICAgICAgICAgdGhpc1BsdWdpbi5fd3JhcChjbHVzdGVyLCAnZ2V0Q29ubmVjdGlvbicsIHRoaXNQbHVnaW4uX3BhdGNoR2V0Q29ubmVjdGlvbihjbHVzdGVyKSk7XG4gICAgICAgICAgICAgICAgdGhpc1BsdWdpbi5fd3JhcChjbHVzdGVyLCAnYWRkJywgdGhpc1BsdWdpbi5fcGF0Y2hBZGQoY2x1c3RlcikpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjbHVzdGVyO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgX3BhdGNoQWRkKGNsdXN0ZXIpIHtcbiAgICAgICAgcmV0dXJuIChvcmlnaW5hbEFkZCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGhpc1BsdWdpbiA9IHRoaXM7XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gYWRkKGlkLCBjb25maWcpIHtcbiAgICAgICAgICAgICAgICAvLyBVbndyYXAgaWYgdW5wYXRjaCBoYXMgYmVlbiBjYWxsZWRcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXNQbHVnaW5bJ19lbmFibGVkJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpc1BsdWdpbi5fdW53cmFwKGNsdXN0ZXIsICdhZGQnKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsQWRkLmFwcGx5KGNsdXN0ZXIsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG9yaWdpbmFsQWRkLmFwcGx5KGNsdXN0ZXIsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgICAgICAgY29uc3Qgbm9kZXMgPSBjbHVzdGVyWydfbm9kZXMnXTtcbiAgICAgICAgICAgICAgICBpZiAobm9kZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm9kZUlkID0gdHlwZW9mIGlkID09PSAnb2JqZWN0J1xuICAgICAgICAgICAgICAgICAgICAgICAgPyAnQ0xVU1RFUjo6JyArIGNsdXN0ZXIuX2xhc3RJZFxuICAgICAgICAgICAgICAgICAgICAgICAgOiBTdHJpbmcoaWQpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwb29sID0gbm9kZXNbbm9kZUlkXS5wb29sO1xuICAgICAgICAgICAgICAgICAgICB0aGlzUGx1Z2luLl9zZXRQb29sY2FsbGJhY2tzKHBvb2wsIHRoaXNQbHVnaW4sIGlkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9O1xuICAgICAgICB9O1xuICAgIH1cbiAgICAvLyBtZXRob2Qgb24gY2x1c3RlciBvciBwb29sXG4gICAgX3BhdGNoR2V0Q29ubmVjdGlvbihwb29sKSB7XG4gICAgICAgIHJldHVybiAob3JpZ2luYWxHZXRDb25uZWN0aW9uKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0aGlzUGx1Z2luID0gdGhpcztcbiAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbiBnZXRDb25uZWN0aW9uKGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgICAgICAgICAgICAgICAvLyBVbndyYXAgaWYgdW5wYXRjaCBoYXMgYmVlbiBjYWxsZWRcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXNQbHVnaW5bJ19lbmFibGVkJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpc1BsdWdpbi5fdW53cmFwKHBvb2wsICdnZXRDb25uZWN0aW9uJyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEdldENvbm5lY3Rpb24uYXBwbHkocG9vbCwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEgJiYgdHlwZW9mIGFyZzEgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcGF0Y2hGbiA9IHRoaXNQbHVnaW4uX2dldENvbm5lY3Rpb25DYWxsYmFja1BhdGNoRm4oYXJnMSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEdldENvbm5lY3Rpb24uY2FsbChwb29sLCBwYXRjaEZuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIGFyZzIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcGF0Y2hGbiA9IHRoaXNQbHVnaW4uX2dldENvbm5lY3Rpb25DYWxsYmFja1BhdGNoRm4oYXJnMik7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEdldENvbm5lY3Rpb24uY2FsbChwb29sLCBhcmcxLCBwYXRjaEZuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDMgJiYgdHlwZW9mIGFyZzMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcGF0Y2hGbiA9IHRoaXNQbHVnaW4uX2dldENvbm5lY3Rpb25DYWxsYmFja1BhdGNoRm4oYXJnMyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEdldENvbm5lY3Rpb24uY2FsbChwb29sLCBhcmcxLCBhcmcyLCBwYXRjaEZuKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsR2V0Q29ubmVjdGlvbi5hcHBseShwb29sLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgX2dldENvbm5lY3Rpb25DYWxsYmFja1BhdGNoRm4oY2IpIHtcbiAgICAgICAgY29uc3QgdGhpc1BsdWdpbiA9IHRoaXM7XG4gICAgICAgIGNvbnN0IGFjdGl2ZUNvbnRleHQgPSBhcGlfMS5jb250ZXh0LmFjdGl2ZSgpO1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGVyciwgY29ubmVjdGlvbikge1xuICAgICAgICAgICAgaWYgKGNvbm5lY3Rpb24pIHtcbiAgICAgICAgICAgICAgICAvLyB0aGlzIGlzIHRoZSBjYWxsYmFjayBwYXNzZWQgaW50byBhIHF1ZXJ5XG4gICAgICAgICAgICAgICAgLy8gbm8gbmVlZCB0byB1bndyYXBcbiAgICAgICAgICAgICAgICBpZiAoISgwLCBpbnN0cnVtZW50YXRpb25fMS5pc1dyYXBwZWQpKGNvbm5lY3Rpb24ucXVlcnkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXNQbHVnaW4uX3dyYXAoY29ubmVjdGlvbiwgJ3F1ZXJ5JywgdGhpc1BsdWdpbi5fcGF0Y2hRdWVyeShjb25uZWN0aW9uKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjYiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIGFwaV8xLmNvbnRleHQud2l0aChhY3RpdmVDb250ZXh0LCBjYiwgdGhpcywgZXJyLCBjb25uZWN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgX3BhdGNoUXVlcnkoY29ubmVjdGlvbikge1xuICAgICAgICByZXR1cm4gKG9yaWdpbmFsUXVlcnkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRoaXNQbHVnaW4gPSB0aGlzO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIHF1ZXJ5KHF1ZXJ5LCBfdmFsdWVzT3JDYWxsYmFjaywgX2NhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgaWYgKCF0aGlzUGx1Z2luWydfZW5hYmxlZCddKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXNQbHVnaW4uX3Vud3JhcChjb25uZWN0aW9uLCAncXVlcnknKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsUXVlcnkuYXBwbHkoY29ubmVjdGlvbiwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3Qgc3BhbiA9IHRoaXNQbHVnaW4udHJhY2VyLnN0YXJ0U3BhbigoMCwgdXRpbHNfMS5nZXRTcGFuTmFtZSkocXVlcnkpLCB7XG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IGFwaV8xLlNwYW5LaW5kLkNMSUVOVCxcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBNeVNRTEluc3RydW1lbnRhdGlvbi5DT01NT05fQVRUUklCVVRFUyksICgwLCB1dGlsc18xLmdldENvbm5lY3Rpb25BdHRyaWJ1dGVzKShjb25uZWN0aW9uLmNvbmZpZykpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKHNlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfU1RBVEVNRU5ULCAoMCwgdXRpbHNfMS5nZXREYlN0YXRlbWVudCkocXVlcnkpKTtcbiAgICAgICAgICAgICAgICBpZiAodGhpc1BsdWdpbi5nZXRDb25maWcoKS5lbmhhbmNlZERhdGFiYXNlUmVwb3J0aW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCB2YWx1ZXM7XG4gICAgICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KF92YWx1ZXNPckNhbGxiYWNrKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVzID0gX3ZhbHVlc09yQ2FsbGJhY2s7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYXJndW1lbnRzWzJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMgPSBbX3ZhbHVlc09yQ2FsbGJhY2tdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHNwYW4uc2V0QXR0cmlidXRlKEF0dHJpYnV0ZU5hbWVzXzEuQXR0cmlidXRlTmFtZXMuTVlTUUxfVkFMVUVTLCAoMCwgdXRpbHNfMS5nZXREYlZhbHVlcykocXVlcnksIHZhbHVlcykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBjYkluZGV4ID0gQXJyYXkuZnJvbShhcmd1bWVudHMpLmZpbmRJbmRleChhcmcgPT4gdHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJyk7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyZW50Q29udGV4dCA9IGFwaV8xLmNvbnRleHQuYWN0aXZlKCk7XG4gICAgICAgICAgICAgICAgaWYgKGNiSW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN0cmVhbWFibGVRdWVyeSA9IGFwaV8xLmNvbnRleHQud2l0aChhcGlfMS50cmFjZS5zZXRTcGFuKGFwaV8xLmNvbnRleHQuYWN0aXZlKCksIHNwYW4pLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxRdWVyeS5hcHBseShjb25uZWN0aW9uLCBhcmd1bWVudHMpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgYXBpXzEuY29udGV4dC5iaW5kKHBhcmVudENvbnRleHQsIHN0cmVhbWFibGVRdWVyeSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzdHJlYW1hYmxlUXVlcnlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5vbignZXJyb3InLCBlcnIgPT4gc3Bhbi5zZXRTdGF0dXMoe1xuICAgICAgICAgICAgICAgICAgICAgICAgY29kZTogYXBpXzEuU3BhblN0YXR1c0NvZGUuRVJST1IsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgfSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAub24oJ2VuZCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNwYW4uZW5kKCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpc1BsdWdpbi5fd3JhcChhcmd1bWVudHMsIGNiSW5kZXgsIHRoaXNQbHVnaW4uX3BhdGNoQ2FsbGJhY2tRdWVyeShzcGFuLCBwYXJlbnRDb250ZXh0KSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhcGlfMS5jb250ZXh0LndpdGgoYXBpXzEudHJhY2Uuc2V0U3BhbihhcGlfMS5jb250ZXh0LmFjdGl2ZSgpLCBzcGFuKSwgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsUXVlcnkuYXBwbHkoY29ubmVjdGlvbiwgYXJndW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgX3BhdGNoQ2FsbGJhY2tRdWVyeShzcGFuLCBwYXJlbnRDb250ZXh0KSB7XG4gICAgICAgIHJldHVybiAob3JpZ2luYWxDYWxsYmFjaykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChlcnIsIHJlc3VsdHMsIGZpZWxkcykge1xuICAgICAgICAgICAgICAgIGlmIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgc3Bhbi5zZXRTdGF0dXMoe1xuICAgICAgICAgICAgICAgICAgICAgICAgY29kZTogYXBpXzEuU3BhblN0YXR1c0NvZGUuRVJST1IsXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBlcnIubWVzc2FnZSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHNwYW4uZW5kKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFwaV8xLmNvbnRleHQud2l0aChwYXJlbnRDb250ZXh0LCAoKSA9PiBvcmlnaW5hbENhbGxiYWNrKC4uLmFyZ3VtZW50cykpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgX3NldFBvb2xjYWxsYmFja3MocG9vbCwgdGhpc1BsdWdpbiwgaWQpIHtcbiAgICAgICAgLy9UT0RPOjogdXNlIHNlbWFudGljIGNvbnZlbnRpb25cbiAgICAgICAgY29uc3QgcG9vbE5hbWUgPSBpZCB8fCAoMCwgdXRpbHNfMS5nZXRQb29sTmFtZSkocG9vbCk7XG4gICAgICAgIHBvb2wub24oJ2Nvbm5lY3Rpb24nLCBjb25uZWN0aW9uID0+IHtcbiAgICAgICAgICAgIHRoaXNQbHVnaW4uX2Nvbm5lY3Rpb25zVXNhZ2UuYWRkKDEsIHtcbiAgICAgICAgICAgICAgICBzdGF0ZTogJ2lkbGUnLFxuICAgICAgICAgICAgICAgIG5hbWU6IHBvb2xOYW1lLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBwb29sLm9uKCdhY3F1aXJlJywgY29ubmVjdGlvbiA9PiB7XG4gICAgICAgICAgICB0aGlzUGx1Z2luLl9jb25uZWN0aW9uc1VzYWdlLmFkZCgtMSwge1xuICAgICAgICAgICAgICAgIHN0YXRlOiAnaWRsZScsXG4gICAgICAgICAgICAgICAgbmFtZTogcG9vbE5hbWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXNQbHVnaW4uX2Nvbm5lY3Rpb25zVXNhZ2UuYWRkKDEsIHtcbiAgICAgICAgICAgICAgICBzdGF0ZTogJ3VzZWQnLFxuICAgICAgICAgICAgICAgIG5hbWU6IHBvb2xOYW1lLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICBwb29sLm9uKCdyZWxlYXNlJywgY29ubmVjdGlvbiA9PiB7XG4gICAgICAgICAgICB0aGlzUGx1Z2luLl9jb25uZWN0aW9uc1VzYWdlLmFkZCgtMSwge1xuICAgICAgICAgICAgICAgIHN0YXRlOiAndXNlZCcsXG4gICAgICAgICAgICAgICAgbmFtZTogcG9vbE5hbWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXNQbHVnaW4uX2Nvbm5lY3Rpb25zVXNhZ2UuYWRkKDEsIHtcbiAgICAgICAgICAgICAgICBzdGF0ZTogJ2lkbGUnLFxuICAgICAgICAgICAgICAgIG5hbWU6IHBvb2xOYW1lLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuTXlTUUxJbnN0cnVtZW50YXRpb24gPSBNeVNRTEluc3RydW1lbnRhdGlvbjtcbk15U1FMSW5zdHJ1bWVudGF0aW9uLkNPTU1PTl9BVFRSSUJVVEVTID0ge1xuICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX0RCX1NZU1RFTV06IHNlbWFudGljX2NvbnZlbnRpb25zXzEuREJTWVNURU1WQUxVRVNfTVlTUUwsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5zdHJ1bWVudGF0aW9uLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js ***!
  \***********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AttributeNames = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Mysql specific attributes not covered by semantic conventions\nvar AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"MYSQL_VALUES\"] = \"db.mysql.values\";\n})(AttributeNames = exports.AttributeNames || (exports.AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy9BdHRyaWJ1dGVOYW1lcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QyxzQkFBc0IsS0FBSztBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL0Bmb2lsL2FwcC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLW15c3FsQDAuNDEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1teXNxbC9idWlsZC9zcmMvQXR0cmlidXRlTmFtZXMuanM/YmRhZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQXR0cmlidXRlTmFtZXMgPSB2b2lkIDA7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuLy8gTXlzcWwgc3BlY2lmaWMgYXR0cmlidXRlcyBub3QgY292ZXJlZCBieSBzZW1hbnRpYyBjb252ZW50aW9uc1xudmFyIEF0dHJpYnV0ZU5hbWVzO1xuKGZ1bmN0aW9uIChBdHRyaWJ1dGVOYW1lcykge1xuICAgIEF0dHJpYnV0ZU5hbWVzW1wiTVlTUUxfVkFMVUVTXCJdID0gXCJkYi5teXNxbC52YWx1ZXNcIjtcbn0pKEF0dHJpYnV0ZU5hbWVzID0gZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyB8fCAoZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1BdHRyaWJ1dGVOYW1lcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsb0NBQW9DLGdCQUFnQjtBQUN2RixDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxtQkFBTyxDQUFDLG9OQUFtQjtBQUN4QyxhQUFhLG1CQUFPLENBQUMsZ01BQVM7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZm9pbC9hcHAvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL2luZGV4LmpzPzI1ODEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH0pO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vaW5zdHJ1bWVudGF0aW9uXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlc1wiKSwgZXhwb3J0cyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCIsInNvdXJjZXMiOlsid2VicGFjazovL0Bmb2lsL2FwcC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLW15c3FsQDAuNDEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1teXNxbC9idWlsZC9zcmMvdHlwZXMuanM/OTIxNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getPoolName = exports.arrayStringifyHelper = exports.getSpanName = exports.getDbValues = exports.getDbStatement = exports.getConnectionAttributes = void 0;\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.28.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\n/**\n * Get an Attributes map from a mysql connection config object\n *\n * @param config ConnectionConfig\n */\nfunction getConnectionAttributes(config) {\n    const { host, port, database, user } = getConfig(config);\n    const portNumber = parseInt(port, 10);\n    if (!isNaN(portNumber)) {\n        return {\n            [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: host,\n            [semantic_conventions_1.SEMATTRS_NET_PEER_PORT]: portNumber,\n            [semantic_conventions_1.SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n            [semantic_conventions_1.SEMATTRS_DB_NAME]: database,\n            [semantic_conventions_1.SEMATTRS_DB_USER]: user,\n        };\n    }\n    return {\n        [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: host,\n        [semantic_conventions_1.SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n        [semantic_conventions_1.SEMATTRS_DB_NAME]: database,\n        [semantic_conventions_1.SEMATTRS_DB_USER]: user,\n    };\n}\nexports.getConnectionAttributes = getConnectionAttributes;\nfunction getConfig(config) {\n    const { host, port, database, user } = (config && config.connectionConfig) || config || {};\n    return { host, port, database, user };\n}\nfunction getJDBCString(host, port, database) {\n    let jdbcString = `jdbc:mysql://${host || 'localhost'}`;\n    if (typeof port === 'number') {\n        jdbcString += `:${port}`;\n    }\n    if (typeof database === 'string') {\n        jdbcString += `/${database}`;\n    }\n    return jdbcString;\n}\n/**\n * @returns the database statement being executed.\n */\nfunction getDbStatement(query) {\n    if (typeof query === 'string') {\n        return query;\n    }\n    else {\n        return query.sql;\n    }\n}\nexports.getDbStatement = getDbStatement;\nfunction getDbValues(query, values) {\n    if (typeof query === 'string') {\n        return arrayStringifyHelper(values);\n    }\n    else {\n        // According to https://github.com/mysqljs/mysql#performing-queries\n        // The values argument will override the values in the option object.\n        return arrayStringifyHelper(values || query.values);\n    }\n}\nexports.getDbValues = getDbValues;\n/**\n * The span name SHOULD be set to a low cardinality value\n * representing the statement executed on the database.\n *\n * @returns SQL statement without variable arguments or SQL verb\n */\nfunction getSpanName(query) {\n    if (typeof query === 'object') {\n        return query.sql;\n    }\n    return query.split(' ')[0];\n}\nexports.getSpanName = getSpanName;\nfunction arrayStringifyHelper(arr) {\n    if (arr)\n        return `[${arr.toString()}]`;\n    return '';\n}\nexports.arrayStringifyHelper = arrayStringifyHelper;\nfunction getPoolName(pool) {\n    const c = pool.config.connectionConfig;\n    let poolName = '';\n    poolName += c.host ? `host: '${c.host}', ` : '';\n    poolName += c.port ? `port: ${c.port}, ` : '';\n    poolName += c.database ? `database: '${c.database}', ` : '';\n    poolName += c.user ? `user: '${c.user}'` : '';\n    if (!c.user) {\n        poolName = poolName.substring(0, poolName.length - 2); //omit last comma\n    }\n    return poolName.trim();\n}\nexports.getPoolName = getPoolName;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyw0QkFBNEIsR0FBRyxtQkFBbUIsR0FBRyxtQkFBbUIsR0FBRyxzQkFBc0IsR0FBRywrQkFBK0I7QUFDekosK0JBQStCLG1CQUFPLENBQUMsaU1BQXFDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQSxZQUFZLDZCQUE2QjtBQUN6QyxhQUFhO0FBQ2I7QUFDQTtBQUNBLHFDQUFxQyxvQkFBb0I7QUFDekQ7QUFDQSwwQkFBMEIsS0FBSztBQUMvQjtBQUNBO0FBQ0EsMEJBQTBCLFNBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLG1CQUFtQixlQUFlO0FBQ2xDO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLE9BQU87QUFDMUMsa0NBQWtDLE9BQU87QUFDekMsMkNBQTJDLFdBQVc7QUFDdEQsbUNBQW1DLE9BQU87QUFDMUM7QUFDQSwrREFBK0Q7QUFDL0Q7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGZvaWwvYXBwLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy91dGlscy5qcz8yMjUzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0UG9vbE5hbWUgPSBleHBvcnRzLmFycmF5U3RyaW5naWZ5SGVscGVyID0gZXhwb3J0cy5nZXRTcGFuTmFtZSA9IGV4cG9ydHMuZ2V0RGJWYWx1ZXMgPSBleHBvcnRzLmdldERiU3RhdGVtZW50ID0gZXhwb3J0cy5nZXRDb25uZWN0aW9uQXR0cmlidXRlcyA9IHZvaWQgMDtcbmNvbnN0IHNlbWFudGljX2NvbnZlbnRpb25zXzEgPSByZXF1aXJlKFwiQG9wZW50ZWxlbWV0cnkvc2VtYW50aWMtY29udmVudGlvbnNcIik7XG4vKipcbiAqIEdldCBhbiBBdHRyaWJ1dGVzIG1hcCBmcm9tIGEgbXlzcWwgY29ubmVjdGlvbiBjb25maWcgb2JqZWN0XG4gKlxuICogQHBhcmFtIGNvbmZpZyBDb25uZWN0aW9uQ29uZmlnXG4gKi9cbmZ1bmN0aW9uIGdldENvbm5lY3Rpb25BdHRyaWJ1dGVzKGNvbmZpZykge1xuICAgIGNvbnN0IHsgaG9zdCwgcG9ydCwgZGF0YWJhc2UsIHVzZXIgfSA9IGdldENvbmZpZyhjb25maWcpO1xuICAgIGNvbnN0IHBvcnROdW1iZXIgPSBwYXJzZUludChwb3J0LCAxMCk7XG4gICAgaWYgKCFpc05hTihwb3J0TnVtYmVyKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfTkVUX1BFRVJfTkFNRV06IGhvc3QsXG4gICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19ORVRfUEVFUl9QT1JUXTogcG9ydE51bWJlcixcbiAgICAgICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX0RCX0NPTk5FQ1RJT05fU1RSSU5HXTogZ2V0SkRCQ1N0cmluZyhob3N0LCBwb3J0LCBkYXRhYmFzZSksXG4gICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19EQl9OQU1FXTogZGF0YWJhc2UsXG4gICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19EQl9VU0VSXTogdXNlcixcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfTkVUX1BFRVJfTkFNRV06IGhvc3QsXG4gICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX0RCX0NPTk5FQ1RJT05fU1RSSU5HXTogZ2V0SkRCQ1N0cmluZyhob3N0LCBwb3J0LCBkYXRhYmFzZSksXG4gICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX0RCX05BTUVdOiBkYXRhYmFzZSxcbiAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfVVNFUl06IHVzZXIsXG4gICAgfTtcbn1cbmV4cG9ydHMuZ2V0Q29ubmVjdGlvbkF0dHJpYnV0ZXMgPSBnZXRDb25uZWN0aW9uQXR0cmlidXRlcztcbmZ1bmN0aW9uIGdldENvbmZpZyhjb25maWcpIHtcbiAgICBjb25zdCB7IGhvc3QsIHBvcnQsIGRhdGFiYXNlLCB1c2VyIH0gPSAoY29uZmlnICYmIGNvbmZpZy5jb25uZWN0aW9uQ29uZmlnKSB8fCBjb25maWcgfHwge307XG4gICAgcmV0dXJuIHsgaG9zdCwgcG9ydCwgZGF0YWJhc2UsIHVzZXIgfTtcbn1cbmZ1bmN0aW9uIGdldEpEQkNTdHJpbmcoaG9zdCwgcG9ydCwgZGF0YWJhc2UpIHtcbiAgICBsZXQgamRiY1N0cmluZyA9IGBqZGJjOm15c3FsOi8vJHtob3N0IHx8ICdsb2NhbGhvc3QnfWA7XG4gICAgaWYgKHR5cGVvZiBwb3J0ID09PSAnbnVtYmVyJykge1xuICAgICAgICBqZGJjU3RyaW5nICs9IGA6JHtwb3J0fWA7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZGF0YWJhc2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGpkYmNTdHJpbmcgKz0gYC8ke2RhdGFiYXNlfWA7XG4gICAgfVxuICAgIHJldHVybiBqZGJjU3RyaW5nO1xufVxuLyoqXG4gKiBAcmV0dXJucyB0aGUgZGF0YWJhc2Ugc3RhdGVtZW50IGJlaW5nIGV4ZWN1dGVkLlxuICovXG5mdW5jdGlvbiBnZXREYlN0YXRlbWVudChxdWVyeSkge1xuICAgIGlmICh0eXBlb2YgcXVlcnkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBxdWVyeTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBxdWVyeS5zcWw7XG4gICAgfVxufVxuZXhwb3J0cy5nZXREYlN0YXRlbWVudCA9IGdldERiU3RhdGVtZW50O1xuZnVuY3Rpb24gZ2V0RGJWYWx1ZXMocXVlcnksIHZhbHVlcykge1xuICAgIGlmICh0eXBlb2YgcXVlcnkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBhcnJheVN0cmluZ2lmeUhlbHBlcih2YWx1ZXMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gQWNjb3JkaW5nIHRvIGh0dHBzOi8vZ2l0aHViLmNvbS9teXNxbGpzL215c3FsI3BlcmZvcm1pbmctcXVlcmllc1xuICAgICAgICAvLyBUaGUgdmFsdWVzIGFyZ3VtZW50IHdpbGwgb3ZlcnJpZGUgdGhlIHZhbHVlcyBpbiB0aGUgb3B0aW9uIG9iamVjdC5cbiAgICAgICAgcmV0dXJuIGFycmF5U3RyaW5naWZ5SGVscGVyKHZhbHVlcyB8fCBxdWVyeS52YWx1ZXMpO1xuICAgIH1cbn1cbmV4cG9ydHMuZ2V0RGJWYWx1ZXMgPSBnZXREYlZhbHVlcztcbi8qKlxuICogVGhlIHNwYW4gbmFtZSBTSE9VTEQgYmUgc2V0IHRvIGEgbG93IGNhcmRpbmFsaXR5IHZhbHVlXG4gKiByZXByZXNlbnRpbmcgdGhlIHN0YXRlbWVudCBleGVjdXRlZCBvbiB0aGUgZGF0YWJhc2UuXG4gKlxuICogQHJldHVybnMgU1FMIHN0YXRlbWVudCB3aXRob3V0IHZhcmlhYmxlIGFyZ3VtZW50cyBvciBTUUwgdmVyYlxuICovXG5mdW5jdGlvbiBnZXRTcGFuTmFtZShxdWVyeSkge1xuICAgIGlmICh0eXBlb2YgcXVlcnkgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBxdWVyeS5zcWw7XG4gICAgfVxuICAgIHJldHVybiBxdWVyeS5zcGxpdCgnICcpWzBdO1xufVxuZXhwb3J0cy5nZXRTcGFuTmFtZSA9IGdldFNwYW5OYW1lO1xuZnVuY3Rpb24gYXJyYXlTdHJpbmdpZnlIZWxwZXIoYXJyKSB7XG4gICAgaWYgKGFycilcbiAgICAgICAgcmV0dXJuIGBbJHthcnIudG9TdHJpbmcoKX1dYDtcbiAgICByZXR1cm4gJyc7XG59XG5leHBvcnRzLmFycmF5U3RyaW5naWZ5SGVscGVyID0gYXJyYXlTdHJpbmdpZnlIZWxwZXI7XG5mdW5jdGlvbiBnZXRQb29sTmFtZShwb29sKSB7XG4gICAgY29uc3QgYyA9IHBvb2wuY29uZmlnLmNvbm5lY3Rpb25Db25maWc7XG4gICAgbGV0IHBvb2xOYW1lID0gJyc7XG4gICAgcG9vbE5hbWUgKz0gYy5ob3N0ID8gYGhvc3Q6ICcke2MuaG9zdH0nLCBgIDogJyc7XG4gICAgcG9vbE5hbWUgKz0gYy5wb3J0ID8gYHBvcnQ6ICR7Yy5wb3J0fSwgYCA6ICcnO1xuICAgIHBvb2xOYW1lICs9IGMuZGF0YWJhc2UgPyBgZGF0YWJhc2U6ICcke2MuZGF0YWJhc2V9JywgYCA6ICcnO1xuICAgIHBvb2xOYW1lICs9IGMudXNlciA/IGB1c2VyOiAnJHtjLnVzZXJ9J2AgOiAnJztcbiAgICBpZiAoIWMudXNlcikge1xuICAgICAgICBwb29sTmFtZSA9IHBvb2xOYW1lLnN1YnN0cmluZygwLCBwb29sTmFtZS5sZW5ndGggLSAyKTsgLy9vbWl0IGxhc3QgY29tbWFcbiAgICB9XG4gICAgcmV0dXJuIHBvb2xOYW1lLnRyaW0oKTtcbn1cbmV4cG9ydHMuZ2V0UG9vbE5hbWUgPSBnZXRQb29sTmFtZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.41.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-mysql';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGluc3RydW1lbnQpLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLHVCQUF1QjtBQUM5QztBQUNBLHVCQUF1QjtBQUN2QixvQkFBb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZm9pbC9hcHAvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL3ZlcnNpb24uanM/NzMzYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9IGV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gdm9pZCAwO1xuLy8gdGhpcyBpcyBhdXRvZ2VuZXJhdGVkIGZpbGUsIHNlZSBzY3JpcHRzL3ZlcnNpb24tdXBkYXRlLmpzXG5leHBvcnRzLlBBQ0tBR0VfVkVSU0lPTiA9ICcwLjQxLjAnO1xuZXhwb3J0cy5QQUNLQUdFX05BTUUgPSAnQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js\n");

/***/ }),

/***/ "(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js":
/*!************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js ***!
  \************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = \"/monitoring\";globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MySQLInstrumentation = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.53.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.28.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./AttributeNames */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js\");\nconst version_1 = __webpack_require__(/*! ./version */ \"(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js\");\nclass MySQLInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n        this._setMetricInstruments();\n    }\n    setMeterProvider(meterProvider) {\n        super.setMeterProvider(meterProvider);\n        this._setMetricInstruments();\n    }\n    _setMetricInstruments() {\n        this._connectionsUsage = this.meter.createUpDownCounter('db.client.connections.usage', //TODO:: use semantic convention\n        {\n            description: 'The number of connections that are currently in state described by the state attribute.',\n            unit: '{connection}',\n        });\n    }\n    init() {\n        return [\n            new instrumentation_1.InstrumentationNodeModuleDefinition('mysql', ['>=2.0.0 <3'], (moduleExports) => {\n                if ((0, instrumentation_1.isWrapped)(moduleExports.createConnection)) {\n                    this._unwrap(moduleExports, 'createConnection');\n                }\n                this._wrap(moduleExports, 'createConnection', this._patchCreateConnection());\n                if ((0, instrumentation_1.isWrapped)(moduleExports.createPool)) {\n                    this._unwrap(moduleExports, 'createPool');\n                }\n                this._wrap(moduleExports, 'createPool', this._patchCreatePool());\n                if ((0, instrumentation_1.isWrapped)(moduleExports.createPoolCluster)) {\n                    this._unwrap(moduleExports, 'createPoolCluster');\n                }\n                this._wrap(moduleExports, 'createPoolCluster', this._patchCreatePoolCluster());\n                return moduleExports;\n            }, (moduleExports) => {\n                if (moduleExports === undefined)\n                    return;\n                this._unwrap(moduleExports, 'createConnection');\n                this._unwrap(moduleExports, 'createPool');\n                this._unwrap(moduleExports, 'createPoolCluster');\n            }),\n        ];\n    }\n    // global export function\n    _patchCreateConnection() {\n        return (originalCreateConnection) => {\n            const thisPlugin = this;\n            return function createConnection(_connectionUri) {\n                const originalResult = originalCreateConnection(...arguments);\n                // This is unwrapped on next call after unpatch\n                thisPlugin._wrap(originalResult, 'query', thisPlugin._patchQuery(originalResult));\n                return originalResult;\n            };\n        };\n    }\n    // global export function\n    _patchCreatePool() {\n        return (originalCreatePool) => {\n            const thisPlugin = this;\n            return function createPool(_config) {\n                const pool = originalCreatePool(...arguments);\n                thisPlugin._wrap(pool, 'query', thisPlugin._patchQuery(pool));\n                thisPlugin._wrap(pool, 'getConnection', thisPlugin._patchGetConnection(pool));\n                thisPlugin._wrap(pool, 'end', thisPlugin._patchPoolEnd(pool));\n                thisPlugin._setPoolcallbacks(pool, thisPlugin, '');\n                return pool;\n            };\n        };\n    }\n    _patchPoolEnd(pool) {\n        return (originalPoolEnd) => {\n            const thisPlugin = this;\n            return function end(callback) {\n                const nAll = pool._allConnections.length;\n                const nFree = pool._freeConnections.length;\n                const nUsed = nAll - nFree;\n                const poolName = (0, utils_1.getPoolName)(pool);\n                thisPlugin._connectionsUsage.add(-nUsed, {\n                    state: 'used',\n                    name: poolName,\n                });\n                thisPlugin._connectionsUsage.add(-nFree, {\n                    state: 'idle',\n                    name: poolName,\n                });\n                originalPoolEnd.apply(pool, arguments);\n            };\n        };\n    }\n    // global export function\n    _patchCreatePoolCluster() {\n        return (originalCreatePoolCluster) => {\n            const thisPlugin = this;\n            return function createPool(_config) {\n                const cluster = originalCreatePoolCluster(...arguments);\n                // This is unwrapped on next call after unpatch\n                thisPlugin._wrap(cluster, 'getConnection', thisPlugin._patchGetConnection(cluster));\n                thisPlugin._wrap(cluster, 'add', thisPlugin._patchAdd(cluster));\n                return cluster;\n            };\n        };\n    }\n    _patchAdd(cluster) {\n        return (originalAdd) => {\n            const thisPlugin = this;\n            return function add(id, config) {\n                // Unwrap if unpatch has been called\n                if (!thisPlugin['_enabled']) {\n                    thisPlugin._unwrap(cluster, 'add');\n                    return originalAdd.apply(cluster, arguments);\n                }\n                originalAdd.apply(cluster, arguments);\n                const nodes = cluster['_nodes'];\n                if (nodes) {\n                    const nodeId = typeof id === 'object'\n                        ? 'CLUSTER::' + cluster._lastId\n                        : String(id);\n                    const pool = nodes[nodeId].pool;\n                    thisPlugin._setPoolcallbacks(pool, thisPlugin, id);\n                }\n            };\n        };\n    }\n    // method on cluster or pool\n    _patchGetConnection(pool) {\n        return (originalGetConnection) => {\n            const thisPlugin = this;\n            return function getConnection(arg1, arg2, arg3) {\n                // Unwrap if unpatch has been called\n                if (!thisPlugin['_enabled']) {\n                    thisPlugin._unwrap(pool, 'getConnection');\n                    return originalGetConnection.apply(pool, arguments);\n                }\n                if (arguments.length === 1 && typeof arg1 === 'function') {\n                    const patchFn = thisPlugin._getConnectionCallbackPatchFn(arg1);\n                    return originalGetConnection.call(pool, patchFn);\n                }\n                if (arguments.length === 2 && typeof arg2 === 'function') {\n                    const patchFn = thisPlugin._getConnectionCallbackPatchFn(arg2);\n                    return originalGetConnection.call(pool, arg1, patchFn);\n                }\n                if (arguments.length === 3 && typeof arg3 === 'function') {\n                    const patchFn = thisPlugin._getConnectionCallbackPatchFn(arg3);\n                    return originalGetConnection.call(pool, arg1, arg2, patchFn);\n                }\n                return originalGetConnection.apply(pool, arguments);\n            };\n        };\n    }\n    _getConnectionCallbackPatchFn(cb) {\n        const thisPlugin = this;\n        const activeContext = api_1.context.active();\n        return function (err, connection) {\n            if (connection) {\n                // this is the callback passed into a query\n                // no need to unwrap\n                if (!(0, instrumentation_1.isWrapped)(connection.query)) {\n                    thisPlugin._wrap(connection, 'query', thisPlugin._patchQuery(connection));\n                }\n            }\n            if (typeof cb === 'function') {\n                api_1.context.with(activeContext, cb, this, err, connection);\n            }\n        };\n    }\n    _patchQuery(connection) {\n        return (originalQuery) => {\n            const thisPlugin = this;\n            return function query(query, _valuesOrCallback, _callback) {\n                if (!thisPlugin['_enabled']) {\n                    thisPlugin._unwrap(connection, 'query');\n                    return originalQuery.apply(connection, arguments);\n                }\n                const span = thisPlugin.tracer.startSpan((0, utils_1.getSpanName)(query), {\n                    kind: api_1.SpanKind.CLIENT,\n                    attributes: Object.assign(Object.assign({}, MySQLInstrumentation.COMMON_ATTRIBUTES), (0, utils_1.getConnectionAttributes)(connection.config)),\n                });\n                span.setAttribute(semantic_conventions_1.SEMATTRS_DB_STATEMENT, (0, utils_1.getDbStatement)(query));\n                if (thisPlugin.getConfig().enhancedDatabaseReporting) {\n                    let values;\n                    if (Array.isArray(_valuesOrCallback)) {\n                        values = _valuesOrCallback;\n                    }\n                    else if (arguments[2]) {\n                        values = [_valuesOrCallback];\n                    }\n                    span.setAttribute(AttributeNames_1.AttributeNames.MYSQL_VALUES, (0, utils_1.getDbValues)(query, values));\n                }\n                const cbIndex = Array.from(arguments).findIndex(arg => typeof arg === 'function');\n                const parentContext = api_1.context.active();\n                if (cbIndex === -1) {\n                    const streamableQuery = api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n                        return originalQuery.apply(connection, arguments);\n                    });\n                    api_1.context.bind(parentContext, streamableQuery);\n                    return streamableQuery\n                        .on('error', err => span.setStatus({\n                        code: api_1.SpanStatusCode.ERROR,\n                        message: err.message,\n                    }))\n                        .on('end', () => {\n                        span.end();\n                    });\n                }\n                else {\n                    thisPlugin._wrap(arguments, cbIndex, thisPlugin._patchCallbackQuery(span, parentContext));\n                    return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n                        return originalQuery.apply(connection, arguments);\n                    });\n                }\n            };\n        };\n    }\n    _patchCallbackQuery(span, parentContext) {\n        return (originalCallback) => {\n            return function (err, results, fields) {\n                if (err) {\n                    span.setStatus({\n                        code: api_1.SpanStatusCode.ERROR,\n                        message: err.message,\n                    });\n                }\n                span.end();\n                return api_1.context.with(parentContext, () => originalCallback(...arguments));\n            };\n        };\n    }\n    _setPoolcallbacks(pool, thisPlugin, id) {\n        //TODO:: use semantic convention\n        const poolName = id || (0, utils_1.getPoolName)(pool);\n        pool.on('connection', connection => {\n            thisPlugin._connectionsUsage.add(1, {\n                state: 'idle',\n                name: poolName,\n            });\n        });\n        pool.on('acquire', connection => {\n            thisPlugin._connectionsUsage.add(-1, {\n                state: 'idle',\n                name: poolName,\n            });\n            thisPlugin._connectionsUsage.add(1, {\n                state: 'used',\n                name: poolName,\n            });\n        });\n        pool.on('release', connection => {\n            thisPlugin._connectionsUsage.add(-1, {\n                state: 'used',\n                name: poolName,\n            });\n            thisPlugin._connectionsUsage.add(1, {\n                state: 'idle',\n                name: poolName,\n            });\n        });\n    }\n}\nexports.MySQLInstrumentation = MySQLInstrumentation;\nMySQLInstrumentation.COMMON_ATTRIBUTES = {\n    [semantic_conventions_1.SEMATTRS_DB_SYSTEM]: semantic_conventions_1.DBSYSTEMVALUES_MYSQL,\n};\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(instrument)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js":
/*!***********************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js ***!
  \***********************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AttributeNames = void 0;\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Mysql specific attributes not covered by semantic conventions\nvar AttributeNames;\n(function (AttributeNames) {\n    AttributeNames[\"MYSQL_VALUES\"] = \"db.mysql.values\";\n})(AttributeNames = exports.AttributeNames || (exports.AttributeNames = {}));\n//# sourceMappingURL=AttributeNames.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL0F0dHJpYnV0ZU5hbWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDLHNCQUFzQixLQUFLO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGZvaWwvYXBwLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy9BdHRyaWJ1dGVOYW1lcy5qcz80YjRjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BdHRyaWJ1dGVOYW1lcyA9IHZvaWQgMDtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG4vLyBNeXNxbCBzcGVjaWZpYyBhdHRyaWJ1dGVzIG5vdCBjb3ZlcmVkIGJ5IHNlbWFudGljIGNvbnZlbnRpb25zXG52YXIgQXR0cmlidXRlTmFtZXM7XG4oZnVuY3Rpb24gKEF0dHJpYnV0ZU5hbWVzKSB7XG4gICAgQXR0cmlidXRlTmFtZXNbXCJNWVNRTF9WQUxVRVNcIl0gPSBcImRiLm15c3FsLnZhbHVlc1wiO1xufSkoQXR0cmlidXRlTmFtZXMgPSBleHBvcnRzLkF0dHJpYnV0ZU5hbWVzIHx8IChleHBvcnRzLkF0dHJpYnV0ZU5hbWVzID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUF0dHJpYnV0ZU5hbWVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js ***!
  \**************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./instrumentation */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js\"), exports);\n__exportStar(__webpack_require__(/*! ./types */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxvQ0FBb0MsZ0JBQWdCO0FBQ3ZGLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhLG1CQUFPLENBQUMsNk1BQW1CO0FBQ3hDLGFBQWEsbUJBQU8sQ0FBQyx5TEFBUztBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bmb2lsL2FwcC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLW15c3FsQDAuNDEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1teXNxbC9idWlsZC9zcmMvaW5kZXguanM/MDViYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qXG4gKiBDb3B5cmlnaHQgVGhlIE9wZW5UZWxlbWV0cnkgQXV0aG9yc1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9pbnN0cnVtZW50YXRpb25cIiksIGV4cG9ydHMpO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL3R5cGVzXCIpLCBleHBvcnRzKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/index.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGZvaWwvYXBwLy4uLy4uL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbnRlbGVtZXRyeStpbnN0cnVtZW50YXRpb24tbXlzcWxAMC40MS4wX0BvcGVudGVsZW1ldHJ5K2FwaUAxLjkuMC9ub2RlX21vZHVsZXMvQG9wZW50ZWxlbWV0cnkvaW5zdHJ1bWVudGF0aW9uLW15c3FsL2J1aWxkL3NyYy90eXBlcy5qcz85YjUyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/types.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js":
/*!**************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js ***!
  \**************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getPoolName = exports.arrayStringifyHelper = exports.getSpanName = exports.getDbValues = exports.getDbStatement = exports.getConnectionAttributes = void 0;\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.28.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\n/**\n * Get an Attributes map from a mysql connection config object\n *\n * @param config ConnectionConfig\n */\nfunction getConnectionAttributes(config) {\n    const { host, port, database, user } = getConfig(config);\n    const portNumber = parseInt(port, 10);\n    if (!isNaN(portNumber)) {\n        return {\n            [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: host,\n            [semantic_conventions_1.SEMATTRS_NET_PEER_PORT]: portNumber,\n            [semantic_conventions_1.SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n            [semantic_conventions_1.SEMATTRS_DB_NAME]: database,\n            [semantic_conventions_1.SEMATTRS_DB_USER]: user,\n        };\n    }\n    return {\n        [semantic_conventions_1.SEMATTRS_NET_PEER_NAME]: host,\n        [semantic_conventions_1.SEMATTRS_DB_CONNECTION_STRING]: getJDBCString(host, port, database),\n        [semantic_conventions_1.SEMATTRS_DB_NAME]: database,\n        [semantic_conventions_1.SEMATTRS_DB_USER]: user,\n    };\n}\nexports.getConnectionAttributes = getConnectionAttributes;\nfunction getConfig(config) {\n    const { host, port, database, user } = (config && config.connectionConfig) || config || {};\n    return { host, port, database, user };\n}\nfunction getJDBCString(host, port, database) {\n    let jdbcString = `jdbc:mysql://${host || 'localhost'}`;\n    if (typeof port === 'number') {\n        jdbcString += `:${port}`;\n    }\n    if (typeof database === 'string') {\n        jdbcString += `/${database}`;\n    }\n    return jdbcString;\n}\n/**\n * @returns the database statement being executed.\n */\nfunction getDbStatement(query) {\n    if (typeof query === 'string') {\n        return query;\n    }\n    else {\n        return query.sql;\n    }\n}\nexports.getDbStatement = getDbStatement;\nfunction getDbValues(query, values) {\n    if (typeof query === 'string') {\n        return arrayStringifyHelper(values);\n    }\n    else {\n        // According to https://github.com/mysqljs/mysql#performing-queries\n        // The values argument will override the values in the option object.\n        return arrayStringifyHelper(values || query.values);\n    }\n}\nexports.getDbValues = getDbValues;\n/**\n * The span name SHOULD be set to a low cardinality value\n * representing the statement executed on the database.\n *\n * @returns SQL statement without variable arguments or SQL verb\n */\nfunction getSpanName(query) {\n    if (typeof query === 'object') {\n        return query.sql;\n    }\n    return query.split(' ')[0];\n}\nexports.getSpanName = getSpanName;\nfunction arrayStringifyHelper(arr) {\n    if (arr)\n        return `[${arr.toString()}]`;\n    return '';\n}\nexports.arrayStringifyHelper = arrayStringifyHelper;\nfunction getPoolName(pool) {\n    const c = pool.config.connectionConfig;\n    let poolName = '';\n    poolName += c.host ? `host: '${c.host}', ` : '';\n    poolName += c.port ? `port: ${c.port}, ` : '';\n    poolName += c.database ? `database: '${c.database}', ` : '';\n    poolName += c.user ? `user: '${c.user}'` : '';\n    if (!c.user) {\n        poolName = poolName.substring(0, poolName.length - 2); //omit last comma\n    }\n    return poolName.trim();\n}\nexports.getPoolName = getPoolName;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLDRCQUE0QixHQUFHLG1CQUFtQixHQUFHLG1CQUFtQixHQUFHLHNCQUFzQixHQUFHLCtCQUErQjtBQUN6SiwrQkFBK0IsbUJBQU8sQ0FBQywwTEFBcUM7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2QkFBNkI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBLFlBQVksNkJBQTZCO0FBQ3pDLGFBQWE7QUFDYjtBQUNBO0FBQ0EscUNBQXFDLG9CQUFvQjtBQUN6RDtBQUNBLDBCQUEwQixLQUFLO0FBQy9CO0FBQ0E7QUFDQSwwQkFBMEIsU0FBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0EsbUJBQW1CLGVBQWU7QUFDbEM7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsT0FBTztBQUMxQyxrQ0FBa0MsT0FBTztBQUN6QywyQ0FBMkMsV0FBVztBQUN0RCxtQ0FBbUMsT0FBTztBQUMxQztBQUNBLCtEQUErRDtBQUMvRDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZm9pbC9hcHAvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL3V0aWxzLmpzP2QzZmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKlxuICogQ29weXJpZ2h0IFRoZSBPcGVuVGVsZW1ldHJ5IEF1dGhvcnNcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRQb29sTmFtZSA9IGV4cG9ydHMuYXJyYXlTdHJpbmdpZnlIZWxwZXIgPSBleHBvcnRzLmdldFNwYW5OYW1lID0gZXhwb3J0cy5nZXREYlZhbHVlcyA9IGV4cG9ydHMuZ2V0RGJTdGF0ZW1lbnQgPSBleHBvcnRzLmdldENvbm5lY3Rpb25BdHRyaWJ1dGVzID0gdm9pZCAwO1xuY29uc3Qgc2VtYW50aWNfY29udmVudGlvbnNfMSA9IHJlcXVpcmUoXCJAb3BlbnRlbGVtZXRyeS9zZW1hbnRpYy1jb252ZW50aW9uc1wiKTtcbi8qKlxuICogR2V0IGFuIEF0dHJpYnV0ZXMgbWFwIGZyb20gYSBteXNxbCBjb25uZWN0aW9uIGNvbmZpZyBvYmplY3RcbiAqXG4gKiBAcGFyYW0gY29uZmlnIENvbm5lY3Rpb25Db25maWdcbiAqL1xuZnVuY3Rpb24gZ2V0Q29ubmVjdGlvbkF0dHJpYnV0ZXMoY29uZmlnKSB7XG4gICAgY29uc3QgeyBob3N0LCBwb3J0LCBkYXRhYmFzZSwgdXNlciB9ID0gZ2V0Q29uZmlnKGNvbmZpZyk7XG4gICAgY29uc3QgcG9ydE51bWJlciA9IHBhcnNlSW50KHBvcnQsIDEwKTtcbiAgICBpZiAoIWlzTmFOKHBvcnROdW1iZXIpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19ORVRfUEVFUl9OQU1FXTogaG9zdCxcbiAgICAgICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX05FVF9QRUVSX1BPUlRdOiBwb3J0TnVtYmVyLFxuICAgICAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfQ09OTkVDVElPTl9TVFJJTkddOiBnZXRKREJDU3RyaW5nKGhvc3QsIHBvcnQsIGRhdGFiYXNlKSxcbiAgICAgICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX0RCX05BTUVdOiBkYXRhYmFzZSxcbiAgICAgICAgICAgIFtzZW1hbnRpY19jb252ZW50aW9uc18xLlNFTUFUVFJTX0RCX1VTRVJdOiB1c2VyLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19ORVRfUEVFUl9OQU1FXTogaG9zdCxcbiAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfQ09OTkVDVElPTl9TVFJJTkddOiBnZXRKREJDU3RyaW5nKGhvc3QsIHBvcnQsIGRhdGFiYXNlKSxcbiAgICAgICAgW3NlbWFudGljX2NvbnZlbnRpb25zXzEuU0VNQVRUUlNfREJfTkFNRV06IGRhdGFiYXNlLFxuICAgICAgICBbc2VtYW50aWNfY29udmVudGlvbnNfMS5TRU1BVFRSU19EQl9VU0VSXTogdXNlcixcbiAgICB9O1xufVxuZXhwb3J0cy5nZXRDb25uZWN0aW9uQXR0cmlidXRlcyA9IGdldENvbm5lY3Rpb25BdHRyaWJ1dGVzO1xuZnVuY3Rpb24gZ2V0Q29uZmlnKGNvbmZpZykge1xuICAgIGNvbnN0IHsgaG9zdCwgcG9ydCwgZGF0YWJhc2UsIHVzZXIgfSA9IChjb25maWcgJiYgY29uZmlnLmNvbm5lY3Rpb25Db25maWcpIHx8IGNvbmZpZyB8fCB7fTtcbiAgICByZXR1cm4geyBob3N0LCBwb3J0LCBkYXRhYmFzZSwgdXNlciB9O1xufVxuZnVuY3Rpb24gZ2V0SkRCQ1N0cmluZyhob3N0LCBwb3J0LCBkYXRhYmFzZSkge1xuICAgIGxldCBqZGJjU3RyaW5nID0gYGpkYmM6bXlzcWw6Ly8ke2hvc3QgfHwgJ2xvY2FsaG9zdCd9YDtcbiAgICBpZiAodHlwZW9mIHBvcnQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIGpkYmNTdHJpbmcgKz0gYDoke3BvcnR9YDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkYXRhYmFzZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgamRiY1N0cmluZyArPSBgLyR7ZGF0YWJhc2V9YDtcbiAgICB9XG4gICAgcmV0dXJuIGpkYmNTdHJpbmc7XG59XG4vKipcbiAqIEByZXR1cm5zIHRoZSBkYXRhYmFzZSBzdGF0ZW1lbnQgYmVpbmcgZXhlY3V0ZWQuXG4gKi9cbmZ1bmN0aW9uIGdldERiU3RhdGVtZW50KHF1ZXJ5KSB7XG4gICAgaWYgKHR5cGVvZiBxdWVyeSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHF1ZXJ5O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHF1ZXJ5LnNxbDtcbiAgICB9XG59XG5leHBvcnRzLmdldERiU3RhdGVtZW50ID0gZ2V0RGJTdGF0ZW1lbnQ7XG5mdW5jdGlvbiBnZXREYlZhbHVlcyhxdWVyeSwgdmFsdWVzKSB7XG4gICAgaWYgKHR5cGVvZiBxdWVyeSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGFycmF5U3RyaW5naWZ5SGVscGVyKHZhbHVlcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBBY2NvcmRpbmcgdG8gaHR0cHM6Ly9naXRodWIuY29tL215c3FsanMvbXlzcWwjcGVyZm9ybWluZy1xdWVyaWVzXG4gICAgICAgIC8vIFRoZSB2YWx1ZXMgYXJndW1lbnQgd2lsbCBvdmVycmlkZSB0aGUgdmFsdWVzIGluIHRoZSBvcHRpb24gb2JqZWN0LlxuICAgICAgICByZXR1cm4gYXJyYXlTdHJpbmdpZnlIZWxwZXIodmFsdWVzIHx8IHF1ZXJ5LnZhbHVlcyk7XG4gICAgfVxufVxuZXhwb3J0cy5nZXREYlZhbHVlcyA9IGdldERiVmFsdWVzO1xuLyoqXG4gKiBUaGUgc3BhbiBuYW1lIFNIT1VMRCBiZSBzZXQgdG8gYSBsb3cgY2FyZGluYWxpdHkgdmFsdWVcbiAqIHJlcHJlc2VudGluZyB0aGUgc3RhdGVtZW50IGV4ZWN1dGVkIG9uIHRoZSBkYXRhYmFzZS5cbiAqXG4gKiBAcmV0dXJucyBTUUwgc3RhdGVtZW50IHdpdGhvdXQgdmFyaWFibGUgYXJndW1lbnRzIG9yIFNRTCB2ZXJiXG4gKi9cbmZ1bmN0aW9uIGdldFNwYW5OYW1lKHF1ZXJ5KSB7XG4gICAgaWYgKHR5cGVvZiBxdWVyeSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIHF1ZXJ5LnNxbDtcbiAgICB9XG4gICAgcmV0dXJuIHF1ZXJ5LnNwbGl0KCcgJylbMF07XG59XG5leHBvcnRzLmdldFNwYW5OYW1lID0gZ2V0U3Bhbk5hbWU7XG5mdW5jdGlvbiBhcnJheVN0cmluZ2lmeUhlbHBlcihhcnIpIHtcbiAgICBpZiAoYXJyKVxuICAgICAgICByZXR1cm4gYFske2Fyci50b1N0cmluZygpfV1gO1xuICAgIHJldHVybiAnJztcbn1cbmV4cG9ydHMuYXJyYXlTdHJpbmdpZnlIZWxwZXIgPSBhcnJheVN0cmluZ2lmeUhlbHBlcjtcbmZ1bmN0aW9uIGdldFBvb2xOYW1lKHBvb2wpIHtcbiAgICBjb25zdCBjID0gcG9vbC5jb25maWcuY29ubmVjdGlvbkNvbmZpZztcbiAgICBsZXQgcG9vbE5hbWUgPSAnJztcbiAgICBwb29sTmFtZSArPSBjLmhvc3QgPyBgaG9zdDogJyR7Yy5ob3N0fScsIGAgOiAnJztcbiAgICBwb29sTmFtZSArPSBjLnBvcnQgPyBgcG9ydDogJHtjLnBvcnR9LCBgIDogJyc7XG4gICAgcG9vbE5hbWUgKz0gYy5kYXRhYmFzZSA/IGBkYXRhYmFzZTogJyR7Yy5kYXRhYmFzZX0nLCBgIDogJyc7XG4gICAgcG9vbE5hbWUgKz0gYy51c2VyID8gYHVzZXI6ICcke2MudXNlcn0nYCA6ICcnO1xuICAgIGlmICghYy51c2VyKSB7XG4gICAgICAgIHBvb2xOYW1lID0gcG9vbE5hbWUuc3Vic3RyaW5nKDAsIHBvb2xOYW1lLmxlbmd0aCAtIDIpOyAvL29taXQgbGFzdCBjb21tYVxuICAgIH1cbiAgICByZXR1cm4gcG9vbE5hbWUudHJpbSgpO1xufVxuZXhwb3J0cy5nZXRQb29sTmFtZSA9IGdldFBvb2xOYW1lO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js":
/*!****************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js ***!
  \****************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PACKAGE_NAME = exports.PACKAGE_VERSION = void 0;\n// this is autogenerated file, see scripts/version-update.js\nexports.PACKAGE_VERSION = '0.41.0';\nexports.PACKAGE_NAME = '@opentelemetry/instrumentation-mysql';\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVudGVsZW1ldHJ5K2luc3RydW1lbnRhdGlvbi1teXNxbEAwLjQxLjBfQG9wZW50ZWxlbWV0cnkrYXBpQDEuOS4wL25vZGVfbW9kdWxlcy9Ab3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwvYnVpbGQvc3JjL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsdUJBQXVCO0FBQzlDO0FBQ0EsdUJBQXVCO0FBQ3ZCLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL0Bmb2lsL2FwcC8uLi8uLi9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW50ZWxlbWV0cnkraW5zdHJ1bWVudGF0aW9uLW15c3FsQDAuNDEuMF9Ab3BlbnRlbGVtZXRyeSthcGlAMS45LjAvbm9kZV9tb2R1bGVzL0BvcGVudGVsZW1ldHJ5L2luc3RydW1lbnRhdGlvbi1teXNxbC9idWlsZC9zcmMvdmVyc2lvbi5qcz8zZWMzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLypcbiAqIENvcHlyaWdodCBUaGUgT3BlblRlbGVtZXRyeSBBdXRob3JzXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUEFDS0FHRV9OQU1FID0gZXhwb3J0cy5QQUNLQUdFX1ZFUlNJT04gPSB2b2lkIDA7XG4vLyB0aGlzIGlzIGF1dG9nZW5lcmF0ZWQgZmlsZSwgc2VlIHNjcmlwdHMvdmVyc2lvbi11cGRhdGUuanNcbmV4cG9ydHMuUEFDS0FHRV9WRVJTSU9OID0gJzAuNDEuMCc7XG5leHBvcnRzLlBBQ0tBR0VfTkFNRSA9ICdAb3BlbnRlbGVtZXRyeS9pbnN0cnVtZW50YXRpb24tbXlzcWwnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js\n");

/***/ }),

/***/ "(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js":
/*!************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js ***!
  \************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval(";globalThis[\"_sentryRewritesTunnelPath\"] = \"/monitoring\";globalThis[\"SENTRY_RELEASE\"] = undefined;globalThis[\"_sentryBasePath\"] = undefined;globalThis[\"_sentryRewriteFramesDistDir\"] = \".next\";\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MySQLInstrumentation = void 0;\nconst api_1 = __webpack_require__(/*! @opentelemetry/api */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+api@1.9.0/node_modules/@opentelemetry/api/build/esm/index.js\");\nconst instrumentation_1 = __webpack_require__(/*! @opentelemetry/instrumentation */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation@0.53.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation/build/esm/index.js\");\nconst semantic_conventions_1 = __webpack_require__(/*! @opentelemetry/semantic-conventions */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.28.0/node_modules/@opentelemetry/semantic-conventions/build/esm/index.js\");\nconst AttributeNames_1 = __webpack_require__(/*! ./AttributeNames */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/AttributeNames.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/utils.js\");\nconst version_1 = __webpack_require__(/*! ./version */ \"(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/version.js\");\nclass MySQLInstrumentation extends instrumentation_1.InstrumentationBase {\n    constructor(config = {}) {\n        super(version_1.PACKAGE_NAME, version_1.PACKAGE_VERSION, config);\n        this._setMetricInstruments();\n    }\n    setMeterProvider(meterProvider) {\n        super.setMeterProvider(meterProvider);\n        this._setMetricInstruments();\n    }\n    _setMetricInstruments() {\n        this._connectionsUsage = this.meter.createUpDownCounter('db.client.connections.usage', //TODO:: use semantic convention\n        {\n            description: 'The number of connections that are currently in state described by the state attribute.',\n            unit: '{connection}',\n        });\n    }\n    init() {\n        return [\n            new instrumentation_1.InstrumentationNodeModuleDefinition('mysql', ['>=2.0.0 <3'], (moduleExports) => {\n                if ((0, instrumentation_1.isWrapped)(moduleExports.createConnection)) {\n                    this._unwrap(moduleExports, 'createConnection');\n                }\n                this._wrap(moduleExports, 'createConnection', this._patchCreateConnection());\n                if ((0, instrumentation_1.isWrapped)(moduleExports.createPool)) {\n                    this._unwrap(moduleExports, 'createPool');\n                }\n                this._wrap(moduleExports, 'createPool', this._patchCreatePool());\n                if ((0, instrumentation_1.isWrapped)(moduleExports.createPoolCluster)) {\n                    this._unwrap(moduleExports, 'createPoolCluster');\n                }\n                this._wrap(moduleExports, 'createPoolCluster', this._patchCreatePoolCluster());\n                return moduleExports;\n            }, (moduleExports) => {\n                if (moduleExports === undefined)\n                    return;\n                this._unwrap(moduleExports, 'createConnection');\n                this._unwrap(moduleExports, 'createPool');\n                this._unwrap(moduleExports, 'createPoolCluster');\n            }),\n        ];\n    }\n    // global export function\n    _patchCreateConnection() {\n        return (originalCreateConnection) => {\n            const thisPlugin = this;\n            return function createConnection(_connectionUri) {\n                const originalResult = originalCreateConnection(...arguments);\n                // This is unwrapped on next call after unpatch\n                thisPlugin._wrap(originalResult, 'query', thisPlugin._patchQuery(originalResult));\n                return originalResult;\n            };\n        };\n    }\n    // global export function\n    _patchCreatePool() {\n        return (originalCreatePool) => {\n            const thisPlugin = this;\n            return function createPool(_config) {\n                const pool = originalCreatePool(...arguments);\n                thisPlugin._wrap(pool, 'query', thisPlugin._patchQuery(pool));\n                thisPlugin._wrap(pool, 'getConnection', thisPlugin._patchGetConnection(pool));\n                thisPlugin._wrap(pool, 'end', thisPlugin._patchPoolEnd(pool));\n                thisPlugin._setPoolcallbacks(pool, thisPlugin, '');\n                return pool;\n            };\n        };\n    }\n    _patchPoolEnd(pool) {\n        return (originalPoolEnd) => {\n            const thisPlugin = this;\n            return function end(callback) {\n                const nAll = pool._allConnections.length;\n                const nFree = pool._freeConnections.length;\n                const nUsed = nAll - nFree;\n                const poolName = (0, utils_1.getPoolName)(pool);\n                thisPlugin._connectionsUsage.add(-nUsed, {\n                    state: 'used',\n                    name: poolName,\n                });\n                thisPlugin._connectionsUsage.add(-nFree, {\n                    state: 'idle',\n                    name: poolName,\n                });\n                originalPoolEnd.apply(pool, arguments);\n            };\n        };\n    }\n    // global export function\n    _patchCreatePoolCluster() {\n        return (originalCreatePoolCluster) => {\n            const thisPlugin = this;\n            return function createPool(_config) {\n                const cluster = originalCreatePoolCluster(...arguments);\n                // This is unwrapped on next call after unpatch\n                thisPlugin._wrap(cluster, 'getConnection', thisPlugin._patchGetConnection(cluster));\n                thisPlugin._wrap(cluster, 'add', thisPlugin._patchAdd(cluster));\n                return cluster;\n            };\n        };\n    }\n    _patchAdd(cluster) {\n        return (originalAdd) => {\n            const thisPlugin = this;\n            return function add(id, config) {\n                // Unwrap if unpatch has been called\n                if (!thisPlugin['_enabled']) {\n                    thisPlugin._unwrap(cluster, 'add');\n                    return originalAdd.apply(cluster, arguments);\n                }\n                originalAdd.apply(cluster, arguments);\n                const nodes = cluster['_nodes'];\n                if (nodes) {\n                    const nodeId = typeof id === 'object'\n                        ? 'CLUSTER::' + cluster._lastId\n                        : String(id);\n                    const pool = nodes[nodeId].pool;\n                    thisPlugin._setPoolcallbacks(pool, thisPlugin, id);\n                }\n            };\n        };\n    }\n    // method on cluster or pool\n    _patchGetConnection(pool) {\n        return (originalGetConnection) => {\n            const thisPlugin = this;\n            return function getConnection(arg1, arg2, arg3) {\n                // Unwrap if unpatch has been called\n                if (!thisPlugin['_enabled']) {\n                    thisPlugin._unwrap(pool, 'getConnection');\n                    return originalGetConnection.apply(pool, arguments);\n                }\n                if (arguments.length === 1 && typeof arg1 === 'function') {\n                    const patchFn = thisPlugin._getConnectionCallbackPatchFn(arg1);\n                    return originalGetConnection.call(pool, patchFn);\n                }\n                if (arguments.length === 2 && typeof arg2 === 'function') {\n                    const patchFn = thisPlugin._getConnectionCallbackPatchFn(arg2);\n                    return originalGetConnection.call(pool, arg1, patchFn);\n                }\n                if (arguments.length === 3 && typeof arg3 === 'function') {\n                    const patchFn = thisPlugin._getConnectionCallbackPatchFn(arg3);\n                    return originalGetConnection.call(pool, arg1, arg2, patchFn);\n                }\n                return originalGetConnection.apply(pool, arguments);\n            };\n        };\n    }\n    _getConnectionCallbackPatchFn(cb) {\n        const thisPlugin = this;\n        const activeContext = api_1.context.active();\n        return function (err, connection) {\n            if (connection) {\n                // this is the callback passed into a query\n                // no need to unwrap\n                if (!(0, instrumentation_1.isWrapped)(connection.query)) {\n                    thisPlugin._wrap(connection, 'query', thisPlugin._patchQuery(connection));\n                }\n            }\n            if (typeof cb === 'function') {\n                api_1.context.with(activeContext, cb, this, err, connection);\n            }\n        };\n    }\n    _patchQuery(connection) {\n        return (originalQuery) => {\n            const thisPlugin = this;\n            return function query(query, _valuesOrCallback, _callback) {\n                if (!thisPlugin['_enabled']) {\n                    thisPlugin._unwrap(connection, 'query');\n                    return originalQuery.apply(connection, arguments);\n                }\n                const span = thisPlugin.tracer.startSpan((0, utils_1.getSpanName)(query), {\n                    kind: api_1.SpanKind.CLIENT,\n                    attributes: Object.assign(Object.assign({}, MySQLInstrumentation.COMMON_ATTRIBUTES), (0, utils_1.getConnectionAttributes)(connection.config)),\n                });\n                span.setAttribute(semantic_conventions_1.SEMATTRS_DB_STATEMENT, (0, utils_1.getDbStatement)(query));\n                if (thisPlugin.getConfig().enhancedDatabaseReporting) {\n                    let values;\n                    if (Array.isArray(_valuesOrCallback)) {\n                        values = _valuesOrCallback;\n                    }\n                    else if (arguments[2]) {\n                        values = [_valuesOrCallback];\n                    }\n                    span.setAttribute(AttributeNames_1.AttributeNames.MYSQL_VALUES, (0, utils_1.getDbValues)(query, values));\n                }\n                const cbIndex = Array.from(arguments).findIndex(arg => typeof arg === 'function');\n                const parentContext = api_1.context.active();\n                if (cbIndex === -1) {\n                    const streamableQuery = api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n                        return originalQuery.apply(connection, arguments);\n                    });\n                    api_1.context.bind(parentContext, streamableQuery);\n                    return streamableQuery\n                        .on('error', err => span.setStatus({\n                        code: api_1.SpanStatusCode.ERROR,\n                        message: err.message,\n                    }))\n                        .on('end', () => {\n                        span.end();\n                    });\n                }\n                else {\n                    thisPlugin._wrap(arguments, cbIndex, thisPlugin._patchCallbackQuery(span, parentContext));\n                    return api_1.context.with(api_1.trace.setSpan(api_1.context.active(), span), () => {\n                        return originalQuery.apply(connection, arguments);\n                    });\n                }\n            };\n        };\n    }\n    _patchCallbackQuery(span, parentContext) {\n        return (originalCallback) => {\n            return function (err, results, fields) {\n                if (err) {\n                    span.setStatus({\n                        code: api_1.SpanStatusCode.ERROR,\n                        message: err.message,\n                    });\n                }\n                span.end();\n                return api_1.context.with(parentContext, () => originalCallback(...arguments));\n            };\n        };\n    }\n    _setPoolcallbacks(pool, thisPlugin, id) {\n        //TODO:: use semantic convention\n        const poolName = id || (0, utils_1.getPoolName)(pool);\n        pool.on('connection', connection => {\n            thisPlugin._connectionsUsage.add(1, {\n                state: 'idle',\n                name: poolName,\n            });\n        });\n        pool.on('acquire', connection => {\n            thisPlugin._connectionsUsage.add(-1, {\n                state: 'idle',\n                name: poolName,\n            });\n            thisPlugin._connectionsUsage.add(1, {\n                state: 'used',\n                name: poolName,\n            });\n        });\n        pool.on('release', connection => {\n            thisPlugin._connectionsUsage.add(-1, {\n                state: 'used',\n                name: poolName,\n            });\n            thisPlugin._connectionsUsage.add(1, {\n                state: 'idle',\n                name: poolName,\n            });\n        });\n    }\n}\nexports.MySQLInstrumentation = MySQLInstrumentation;\nMySQLInstrumentation.COMMON_ATTRIBUTES = {\n    [semantic_conventions_1.SEMATTRS_DB_SYSTEM]: semantic_conventions_1.DBSYSTEMVALUES_MYSQL,\n};\n//# sourceMappingURL=instrumentation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/.pnpm/@opentelemetry+instrumentation-mysql@0.41.0_@opentelemetry+api@1.9.0/node_modules/@opentelemetry/instrumentation-mysql/build/src/instrumentation.js\n");

/***/ })

};
;