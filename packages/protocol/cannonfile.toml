name="foil"
version="0.12"

[var.settings]
owner = "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
startTime = "<%= timestamp %>"
endTime = "<%= timestamp + 604800 %>"
baseAssetMinPriceTick = "5200" # 1.709
baseAssetMaxPriceTick = "28200" # 17.09
feeRate = "10000" # 1%
startingSqrtPriceX96 = "146497135921788803112962621440" # 3.419
assertionLiveness = "21600" # 6 hours
bondAmount = "5000000000"
priceUnit = "<%= formatBytes32String('wstGwei/gas') %>"
depends=[]

[clone.UMA]
source="uma-oov3"
target="foil@uma-mock"
options.defaultCurrency = "<%= BondCurrency.Token.address %>"
options.minimumBond = "0"

[clone.Uniswap]
source="uniswap"
target="foil@uniswap"

[clone.CollateralAsset]
source="mintable-token@permissionless-mint"
target="foil@test-collateral-asset"
var.symbol="wstETH"

[clone.BondCurrency]
source="mintable-token@permissionless-mint"
target="foil@test-bond-currency"
var.symbol="USDC"
var.decimals = "6"

[deploy.ReentrancyGuard]
artifact = "ReentrancyGuard"

[deploy.ConfigurationModule]
artifact="ConfigurationModule"
libraries.ReentrancyGuard="<%= contracts.ReentrancyGuard.address %>"
args=["<%= settings.owner %>"]

[deploy.LiquidityModule]
artifact="LiquidityModule"

[deploy.UMASettlementModule]
artifact="UMASettlementModule"

[deploy.TradeModule]
artifact="TradeModule"

[deploy.TradeViewsModule]
artifact="TradeViewsModule"

[deploy.NftModule]
artifact="NftModule"

[deploy.ViewsModule]
artifact="ViewsModule"

[deploy.ERC165Module]
artifact="ERC165Module"

[deploy.SettlementModule]
artifact="SettlementModule"

[router.Foil]
contracts=[
  "ConfigurationModule",
  "LiquidityModule",
  "UMASettlementModule",
  "TradeModule",
  "TradeViewsModule",
  "NftModule",
  "ViewsModule",
  "ERC165Module",
  "SettlementModule"
]
highlight=true

[invoke.initializeMarket]
target="Foil"
func="initializeMarket"
from="<%= settings.owner %>"
args=[
  "<%= settings.owner %>",
  "<%= imports.CollateralAsset.contracts.Token.address %>",
  { baseAssetMinPriceTick = "<%= settings.baseAssetMinPriceTick %>", baseAssetMaxPriceTick = "<%= settings.baseAssetMaxPriceTick %>", feeRate = "<%= settings.feeRate %>", assertionLiveness= "<%= settings.assertionLiveness %>", bondCurrency = "<%= imports.BondCurrency.contracts.Token.address %>", bondAmount= "<%= settings.bondAmount %>", priceUnit= "<%= settings.priceUnit %>",  uniswapPositionManager =  "<%= imports.Uniswap.contracts.NonfungiblePositionManager.address %>", uniswapSwapRouter = "<%= imports.Uniswap.contracts.SwapRouter.address %>", uniswapQuoter = "<%= imports.Uniswap.contracts.Quoter.address %>", optimisticOracleV3 = "<%= imports.UMA.contracts.OptimisticOracleV3.address %>" }
]
depends=["router.Foil"]


[invoke.createEpoch]
target="Foil"
func="createEpoch"
from="<%= settings.owner %>"
args=[
  "<%= settings.startTime %>",
  "<%= settings.endTime %>",
  "<%= settings.startingSqrtPriceX96 %>"
]
depends=["invoke.initializeMarket"]

[invoke.gimmeTokens]
target="CollateralAsset.Token"
func="mint"
args=["<%= parseEther('1000') %>", "<%= settings.owner %>"]
depends=["clone.CollateralAsset"]