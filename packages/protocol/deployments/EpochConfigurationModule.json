{
  "address": "0x0A67FB887531CCE9DEA644e512C0ebEc8634AE32",
  "abi": [
    {
      "type": "function",
      "name": "createEpoch",
      "inputs": [
        {
          "name": "startTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "endTime",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "startingSqrtPriceX96",
          "type": "uint160",
          "internalType": "uint160"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "initializeMarket",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "collateralAsset",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "uniswapPositionManager",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "uniswapSwapRouter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "optimisticOracleV3",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "epochParams",
          "type": "tuple",
          "internalType": "struct IFoilStructs.EpochParams",
          "components": [
            {
              "name": "baseAssetMinPriceTick",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "baseAssetMaxPriceTick",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "feeRate",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "assertionLiveness",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "bondCurrency",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "bondAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "priceUnit",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateMarket",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "uniswapPositionManager",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "uniswapSwapRouter",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "optimisticOracleV3",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "epochParms",
          "type": "tuple",
          "internalType": "struct IFoilStructs.EpochParams",
          "components": [
            {
              "name": "baseAssetMinPriceTick",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "baseAssetMaxPriceTick",
              "type": "int24",
              "internalType": "int24"
            },
            {
              "name": "feeRate",
              "type": "uint24",
              "internalType": "uint24"
            },
            {
              "name": "assertionLiveness",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "bondCurrency",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "bondAmount",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "priceUnit",
              "type": "bytes32",
              "internalType": "bytes32"
            }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "error",
      "name": "EpochAlreadyStarted",
      "inputs": []
    },
    {
      "type": "error",
      "name": "InvalidData",
      "inputs": [
        {
          "name": "message",
          "type": "string",
          "internalType": "string"
        }
      ]
    },
    {
      "type": "error",
      "name": "InvalidMarket",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MarketAlreadyCreated",
      "inputs": []
    },
    {
      "type": "error",
      "name": "MarketNotInitialized",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OnlyOwner",
      "inputs": []
    },
    {
      "type": "error",
      "name": "OverflowInt24ToUint256",
      "inputs": []
    },
    {
      "type": "error",
      "name": "ReentrancyGuardReentrantCall",
      "inputs": []
    },
    {
      "type": "error",
      "name": "TokensAlreadyCreated",
      "inputs": []
    }
  ],
  "constructorArgs": [],
  "linkedLibraries": {},
  "deployTxnHash": "0x4cbf8d74eb9cec0b4df180e06f0a94552034b95fa1883ea19925f5c63415a713",
  "deployTxnBlockNumber": "3",
  "deployTimestamp": "1724953260",
  "sourceName": "src/contracts/modules/EpochConfigurationModule.sol",
  "contractName": "EpochConfigurationModule",
  "deployedOn": "deploy.EpochConfigurationModule",
  "gasUsed": 2015789,
  "gasCost": "1000295134"
}